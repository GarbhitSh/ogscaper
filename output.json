{
  "team_id": "teamXYZ",
  "items": [
    {
      "title": "How well do LeetCode ratings predict interview performance? Here's the data.",
      "content": "(Google, Salesforce, GE), is the primary author of Beyond Cracking the Coding\nInterviewâthe official sequel to Gayle McDowell's original CTCI. He works as a\ntech consultant and has a decade of experience helping engineers land their\ndream jobs. Heâs a top-rated mentor (interviewing.io, Karat, Pathrise,\nSkilled.inc) and the author of viral technical content on system design and\ntechnical interview strategies featured on HackerNews, Business Insider, and\nWired. He also sometimes writes technical content for interviewing.io (like\nthis piece) and was one of the authors of interviewing.ioâs A Senior\nEngineer's Guide to the System Design Interview. You can find him online at\nmikemroczka.com, LinkedIn, and X. Have you ever wondered if you should spend\nmore time on LeetCode, participate in those contests, or focus on solving\nharder problems? A popular Reddit post suggests you need 700+ questions and a\nLeetCode rating between 1800-2000 to pass FAANG interviews. Is this really\nwhat the data supports? To answer these questions and more, we looked at our\nusers' LeetCode ranks and ratings and tied them back to interview performance\non our platform and whether those users worked at FAANG. In this post, weâll\nshare what weâve learned. The experiment interviewing.io is an interview\npractice platform and recruiting marketplace for engineers. Engineers use us\nfor mock interviews. Companies use us to hire top performers. Hundreds of\nthousands of engineers have used our platform to prepare for interviews, and\nwe have performance data for over 100k technical interviews (split between\nreal interviews and mocks). We surveyed almost 700 of our users and asked them\nto share their LeetCode and LinkedIn profiles. From those profiles, we pulled\nour usersâ employment history, as well as their LeetCode data: number of\nproblems worked, ratings, and, if they had it, contest performance. Finally,\nwe cross-referenced all this data with their performance in mock and real\ninterviews on interviewing.io. This data set allowed us to start asking\ninteresting questions. How much LeetCoding is useful? What kinds of problems\nare most useful to practice? How does LeetCode performance relate to\nperformance in interviews with real people? Do LeetCode contest scores predict\ninterview performance, and is a competitive coder likelier to work at a big\ntech company? Are hard questions worth solving or should we just stick with\nmediums? Let's find out! Results The matrix below summarizes our findings. In\naddition to all LeetCode fields listed below, we also looked into global\nratings and contest ratings. It was harder to find a large enough sample size\nto see any effect of those who did contests. Since the results were not large\nenough to be informative we have excluded them from the rest of this piece.\nAll findings listed below are statistically significant, with lighter squares\nindicating stronger correlations. For each profile, we looked at the following\nattributes: Total questions : the total number of questions solved on LeetCode\n: the total number of questions solved on LeetCode Hard questions : the number\nof \"hard\" questions solved on LeetCode : the number of \"hard\" questions solved\non LeetCode Medium questions : the number of \"medium\" questions solved on\nLeetCode : the number of \"medium\" questions solved on LeetCode Easy questions\n: the number of \"easy\" questions solved on LeetCode : the number of \"easy\"\nquestions solved on LeetCode Worked at FAANG : whether or not the user has\never worked at a FAANG company : whether or not the user has ever worked at a\nFAANG company interviewing.io percentile: how an interviewing.io user stacks\nup against other users of the platform, after having completed at least one\ninterview How LeetCode attributes relate to having worked at FAANG and\nperformance in mock and real interviews on interviewing.io. Correlations range\nfrom 1 (directly positively correlated) to -1 (directly negatively\ncorrelated). 0 means thereâs no relationship. This matrix summarizes the\ncorrelations between LeetCode attributes (y axis) with 1) whether people\nworked at a FAANG and 2) how well they performed in interviews on\ninterviewing.io (x axis). The higher the number (and the darker the color),\nthe stronger the relationship. For instance, the number of questions a user\nsolved correlates with working at a FAANG company and a userâs percentile\nranking on interviewing.io. We see that it is a stronger predictor of\ninterview performance than it is for working at a FAANG company (0.27 and\n0.17, respectively). Let's dig into the most exciting findings! The total\nnumber of questions you have completed matters! Unsurprisingly, the total\nnumber of questions a user has completed correlates with having FAANG on their\nresume and doing well in technical interviews. Those who work at FAANG\ncompanies appear to have completed more questions than those who do not. Don't\nfret, though, as this doesn't mean you're doomed to be behind people who have\nstarted sooner and have amassed thousands of questions. The vast majority of\nour top users stop LeetCoding after they've hit about 500 questions. Only a\nfraction of top users have done more than ~500 questions, and only about 10\ndid more than a thousand questions. As you might expect, there are seriously\ndiminishing returns associated with doing more than 500 questions. Those who\ncontinued past the 500 questions performed only marginally better than those\nwho had stopped near 500. In the zero-sum interviewing game, those who\ncomplete the most LeetCode questions generally get the highest interview\nscores and work at the most desirable tech companies, but completing ~500\nquestions will put you among the top talent in the current market. The\ndifficulty level you attempt matters, too! It is common wisdom on the LeetCode\ndiscussion board and subreddits to \"do medium questions, not hard questions,\"\nwith the argument that companies don't ask LeetCode hards. Does this advice\nstand up to scrutiny? Mostly no. The data shows a clear bias towards those who\nsolved more challenging problems, the exact point at which this matters is up\nfor debate. At interviewing.io we find that before tackling difficult\nquestions, you just need to first start doing problems. Getting started\nmatters more than attempting to complete a particular question difficulty, so\ndon't focus arbitrarily on medium/hard questions, just focus on practicing!\nTip 1: Start with anything. Getting started matters more than picking the\nperfect set of questions. For those just starting, you might think, \"I'm a\nstraight-A student and a fast learner, so I should be able to manage hard\nquestions.\" Don't make this mistake, or you'll burn out quickly. Instead, just\nfocus on doing questions and getting into the habit of translating your\nthoughts into code efficiently. Those who solved more challenging questions\nneeded to do far fewer questions to have the same chance of getting into a\nFAANG company Those who solved more challenging questions needed to do far\nfewer questions to have a high interviewing.io percentile Before tackling\nmediums and hards, we need to first get good at easy questions. Once we can\ntackle mediums, for each additional 50 questions you complete, you increase\nyour score of passing your interviews by three percentage points. On the other\nhand, a LeetCode hard carries over twice the benefits of a medium question.\nCompleting 50 hard questions increases your interview score by seven\npercentage points! Our data shows that you'd need to complete close to 233\nmedium questions to get the same benefits that 100 hard questions would give.\nConsider these two people (fictitious but inspired by real examples in our\ndata): Question Difficulty Alex Kara Easy 50 25 Medium 630 50 Hard 10 135\nTotal 690 210 These two people are statistically likely to have similar\ninterview scores, yet Kara completed half the number of questions Alex did.\nWhile it goes against standard advice, harder questions having a higher\nbenefit make sense. A LeetCode medium tends to require you to do one thing\n(perform a DFS, scan an array, etc.) to get the correct answer. In contrast,\nhard questions require you to do multiple things (memoize results while\nperforming a DFS, tally prefix sums while scanning an array, etc.). The\ncompounding nature of multiple tasks in harder questions necessitates deeper\nlearning in fewer questions. Admittedly, there is a chicken-and-egg scenario\ngoing on here. Naively, one might think everyone should just do hard\nquestions, but that doesn't work in practice. Jumping straight to hard\nquestions is an infeasible leap for most people, and the reason many people\ncan complete hard questions is precisely because they have finished many\nmedium questions first. Our advice is not to jump to hard questions\nimmediately. Instead, you should be mindful and not stay at the medium\ndifficulty level longer than necessary. It isn't that the advice to \"do medium\nquestions\" is wrongâit is just overused. It is natural to want to be able to\ncomplete a question regularly in a short period of time. Still, if you find\nyourself completing LeetCode mediums quickly, it indicates that you have\nstagnated and would be better off moving on to hards. If you have solved 100\nor more medium questions, you'll likely get more bang for your buck by\ntransitioning to hard. Tip 2: Don't ignore hard questions. Balance your medium\nquestions with the hard ones. The compounding nature of multiple tasks in\nharder questions necessitates deeper learning in fewer questions. Finally, we\nmust also acknowledge that not all hard questions are created equal. This tip\nis my gut feeling, and we don't have data to back it up, but intuitively,\nwe've all done hard questions that seem impossible, hard questions that seemed\nlike they should have been rated medium, and even medium questions that seem\nlike they should have been hard. Question difficulty is somewhat subjective,\nso if you focus on hard questions, choose questions with a high acceptance\nrating and/or ones that are \"frequently asked.\" These questions tend to be\nachievable (they don't have a single impossible trick you need to just have\nknown), realistic (they don't test nonsense algorithms no one knows like\nManacherâs algorithm), and solution-flexible (there is often more than one\nvalid approach). Tip 3: When choosing hard questions, pick popular questions.\nThey are more likely to be achievable, realistic, and solution-flexible, which\nwill likely result in more learning per question. Contests and rankings don't\nmatter Surprisingly, we found no correlation between LeetCode ratings and\ntheir interviewing percentile. Those who were great at contests also didn't\nappear more likely to have FAANG on their resume. Two confounding variables\nthat might have caused these unexpected results are: Small contest selection\nsize: Despite our best efforts, we received a relatively small group of\ncandidates that attended any number of contests, let alone several. The data\nset may be too small to find a correlation. Biased candidate selection: We\nincentivized candidates with free interviews, so those who regularly complete\ncontests (and therefore have a lot of practice and likely feel confident in\ntheir skills) might not be interested in the rewards and weren't studied in\nthis experiment. Tip 4: Don't worry about contests unless you enjoy them. They\nprovide a way to practice managing your time and keep yourself honest with how\nfast you are moving, but they don't contribute much to your success apart from\ncontaining more questions for you to attempt. Conclusion In the end, LeetCode\nquestions are a reasonable proxy for predictors of interview performance.\nWhile ratings and contest scores don't seem to matter,1 questions âand\nquestion difficultyâdo. Focus on tackling increasingly difficult questions\nuntil you've hit that point of diminishing returns near ~500. Don't stagnate\nwith medium questions; pick popular and frequently asked hard questions, too.\nAnd don't stress if your friend has a higher LeetCode score than you do; turns\nout it doesn't mean much! Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/how-well-do-leetcode-ratings-predict-interview-performance",
      "author": "",
      "user_id": ""
    },
    {
      "title": "We ran an experiment to see how easy it is to cheat with ChatGPT in interviews",
      "content": "video of someone cheating in an interview with ChatGPT. Videos like this still\ncan be found online, but companies hate them, so they don't stay up for long\nChatGPT has revolutionized work as we know it. From helping small businesses\nautomate their administrative tasks to coding entire React components for web\ndevelopers, its usefulness is hard to overstate. At interviewing.io, we've\nbeen thinking a lot about how ChatGPT will change technical interviewing. One\nbig question is: Does ChatGPT make it easy to cheat in interviews? You've\nprobably started to hear concerns about students cheating on their homework\nwith ChatGPT, and we are certain that some people have tried to cheat in\ninterviews with it, too! Initial responses to cheating software have been\npretty much in line with what youâd expect: It seems clear that ChatGPT can\nassist people during their interviews, but we wanted to know: How much can it\nhelp? How easy is it to cheat (and get away with it)? Will companies that ask\nLeetCode questions need to make significant changes to their interview\nprocess? To answer these questions, we recruited some of our professional\ninterviewers and users for a cheating experiment! Below, weâll share\neverything we discovered and explain what it means for you. As a little\npreview, just know this: companies need to change the types of interview\nquestions they are askingâimmediately. The experiment interviewing.io is an\ninterview practice platform and recruiting marketplace for engineers.\nEngineers use us for mock interviews. Companies use us to hire top performers.\nWe have thousands of professional interviewers in our ecosystem, and hundreds\nof thousands of engineers have used our platform to prepare for interviews.1\nInterviewers Interviewers came from our pool of professional interviewers.\nThey were broken into three groups, with each group asking a different type of\nquestion. The interviewers had no idea that the experiment was about ChatGPT\nor cheating; we told them that \"[this] research study aims to understand the\ntrends in the predictability of an interviewerâs decisions over time â\nespecially when asking standard vs. non-standard interview questions.\" These\nwere the three question types: Verbatim LeetCode questions: questions pulled\ndirectly from LeetCode at the interviewer's discretion with no modifications\nto the question. Example: The Sort Colors LeetCode question is asked exactly\nas it is written. Modified LeetCode questions: questions pulled from LeetCode\nand then modified to be similar to the original but still notably different\nfrom it. Example: The Sort Colors question above but modified to have four\nintegers (0,1,2,3) instead of just three integers (0,1,2) in the input. Custom\nquestions: questions that arenât directly tied to any question that exists\nonline. Example: You are given a log file with the following format: - : \\-\n\\- Your task is to identify the user who represents the median level of\nengagement in a conversation. Only consider users with a contribution score\ngreater than 50%. Assume that the number of such users is odd, and you need to\nfind the one right in the middle when sorted by their contribution scores.\nGiven the file below, the correct answer is SyntaxSorcerer. LOG FILE START\nNullPointerNinja: \"who's going to the event tomorrow night?\" - 100%\nLambdaLancer: \"wat?\" - 5% NullPointerNinja: \"the event which is on 123\navenue!\" - 100% SyntaxSorcerer: \"I'm coming! I'll bring chips!\" - 80%\nSyntaxSorcerer: \"and something to drink!\" - 80% LambdaLancer: \"I can't make\nit\" - 25% LambdaLancer: \"ð\" - 25% LambdaLancer: \"I really wanted to come too!\"\n- 25% BitwiseBard: \"I'll be there!\" - 25% CodeMystic: \"me too and I'll brink\nsome dip\" - 75% LOG FILE END For more information about question types and\nabout how we designed this experiment, please read the Interviewer Experiment\nGuidelines doc that we shared with participating interviewers. Interviewees\nInterviewees came from our pool of active users and were invited to\nparticipate in a short survey. We selected interviewees who: Were actively\nlooking for a job in today's market Had 4+ years of experience and were\napplying to senior-level positions Rated their âChatGPT while codingâ\nfamiliarity as moderate to high Identified themselves as someone who thought\nthey could cheat in an interview without getting caught This selection helped\nus skew the candidates toward people who could feasibly cheat in an interview,\nhad the motivation to do so, and were already reasonably familiar with ChatGPT\nand coding interviews. We told interviewees that they had to use ChatGPT in\nthe interview, and the goal was to test their ability to cheat with ChatGPT.\nThey were also told not to try to pass the interview with their own skills â\nthe point was to rely on ChatGPT. We ended up conducting 37 interviews\noverall, 32 of which we were able to use (we had to remove 5 because\nparticipants didnât follow directions): 11 with the âverbatimâ treatment 9\nwith the âmodifiedâ treatment 12 with the âcustomâ treatment A quick\ndisclaimer. Because our platform allows for anonymity, our interviews have\naudio but no video. Weâre anonymous because we want to create a safe space for\nour users to fail and learn quickly without judgment. Itâs great for our\nusers, but we acknowledge that not having video in these interviews makes our\nexperiment less realistic. In a real interview, you will be on camera with a\njob on the line, which makes cheating harder â but does not eliminate it.\nAfter the interviews, both interviewers and interviewees had to complete an\nexit survey. We asked interviewees about the difficulties of using ChatGPT\nduring the interview, and interviewers were given multiple chances to express\nconcerns about the interview â we wanted to see how many interviewers would\nflag their interviews as problematic and report that they suspected cheating.\nPost-survey interviewee questions Post-survey interviewer questions We had no\nidea what would happen in this experiment, but we assumed that if half the\ncandidates that cheated got away with it and passed the interview, it would be\na telling result for our industry. Results After removing interviews where\nparticipants did not follow instructions2, we got the following results. Our\ncontrol was how candidates performed in interviewing.io mock interviews\noutside the study: 53%.3 Note that most mock interviews on our platform are\nLeetCode-style questions, which makes sense because that's primarily what\nFAANG companies ask. We'll come back to this in a moment. 'Verbatim' questions\npassed significantly more often, compared to both our platform average and to\n'custom' questions. 'Verbatim' and 'modified' questions were not statistically\nsignificantly differnt from each other. 'Custom' questions had a significantly\nlower pass rate than any of the other groups. âVerbatimâ questions\nPredictably, the verbatim group performed the best, passing 73% of their\ninterviews. Interviewees reported that they got the perfect solution from\nChatGPT. The most notable comment from the post-interview survey for this\ngroup is below â we think it is particularly telling of what was going on in\nmany of the interviewersâ minds: âIt's tough to determine if the candidate\nbreezed through the question because they're actually good or if they've heard\nthis question before. Normally, I add 1-2 unique twists to the problem to\nascertain the difference.â Normally, this interviewer would have followed up\nwith a modified question to get more signal, so letâs examine the âmodifiedâ\ngroup next to see if interviewers actually got more signal by adding a twist\nto their questions. âModifiedâ questions Remember, this group may have had a\nLeetCode question given to them, which was standard but modified in a way that\nwas not directly available online. This means ChatGPT couldnât have had a\ndirect answer to this question. Hence, the interviewees were much more\ndependent on ChatGPT's actual problem-solving abilities than its ability to\nregurgitate LeetCode tutorials. As predicted, the results for this group\nwerenât too different from the âverbatimâ group, with 67% of candidates\npassing their interviews. As it turns out, this difference was not\nstatistically significantly different from the \"verbatim\" group, i.e.,\nâmodifiedâ and âverbatimâ are essentially the same. This result suggests that\nChatGPT can handle minor modifications to questions without much trouble.\nInterviewees did notice, however, that it took more prompting to get ChatGPT\nto solve the modified questions. As one of our interviewees said: âQuestions\nthat are lifted directly from LeetCode were no problem at all. A follow-up\nquestion that was not so much directly LeetCode-style was much harder to get\nChatGPT to answer.â âCustomâ questions As expected, the âcustomâ question\ngroup had the lowest pass rate, with only 25% of candidates passing. Not only\nis it statistically significantly smaller than the other two treatment groups,\nit's significantly lower than the control! When you ask candidates fully\ncustom questions, they perform worse than they do when they're not cheating\n(and getting asked LeetCode-style questions)! Note that this number, when\ninitially calculated, was marginally higher, but after reviewing the custom\nquestions in detail, we discovered a problem with this question type we hadnât\nanticipated, which had skewed the results minorly toward a higher pass rate.\nRead the section below called \"Companies: Change the questions you are asking\nimmediately!\" to find out what that problem was. No one was caught cheating!\nIn our experiment, interviewers were not aware that the interviewees were\nbeing asked to cheat. As you recall, after each interview, we had interviewers\ncomplete a survey in which they had to describe how confident they were in\ntheir assessments of candidates. Interviewer confidence in the correctness of\ntheir assessments was high, with 72% saying they were confident in their\nhiring decision. One interviewer felt so strongly about an interviewee's\nperformance that they concluded we should invite them to be an interviewer on\nthe platform! âThe candidate performed very well and demonstrated knowledge of\na strong Amazon L6 (Google L5) SWE... and could also be considered to be an\ninterviewer/mentor on interviewing.io.â That is a lot of confidence after just\none interview â probably too much! Weâve long known that engineers are bad at\ngauging their own performance, so perhaps it shouldnât come as a shock to find\nthat interviewers also overestimate the effectiveness of the questions that\nthey ask. Of the interviewers who were not confident in their hiring choice\n(28%), we asked them why. This was the frequency distribution of their\nreasons. Note that cheating isnât mentioned anywhere! Most interviewers\nconcerned about their hiring decision expressed specific reasons for their\nlack of confidence. These issues typically included suboptimal solutions,\nmissed edge cases, messy code, or poor communication. We specifically included\nan âOther Issueâ category to see if they would express a concern that the\ninterviewee was cheating, but digging deeper revealed only minor grievances\nlike âpersonality issuesâ and âthey need to speed up their coding.â In\naddition to having this opportunity to call out cheating, interviewers were\nprompted three additional times to note any other concerns they had with the\ninterview, including free-form text boxes and several multiple-choice\nquestions with options to explain their concerns. When an interviewee bombed\nbecause they didnât understand the ChatGPT response, the interviewer chalked\nup the intervieweeâs odd behavior and stilted responses to a lack of practice\nâ not cheating. One interviewer thought the candidate's problem-solving was\nfine but commented that they were slow and needed to consider edge cases more\ncarefully. âCandidate did not seem prepared for any LeetCode questions.\"\nâCandidate's approach lacked clarity, and they jumped into the coding too\nearly.â âThe candidate was not prepared to tackle even the most basic coding\nquestions on LeetCode.â âGood problem solving in general, but the candidate\nneeds to be faster at coding and identifying critical edge cases.â So, who\nreported concerns about cheating? And who got caught? As it turns out, not a\nsingle interviewer mentioned concerns about any of the candidates cheating! We\nwere stunned to discover that interviewers reported no suspicions of cheating,\nand interestingly, interviewees were largely confident that they were getting\naway with it, too. 81% reported no concerns about being caught, 13% thought\nthey might have tipped off the interviewer, and an astonishingly small 6% of\nparticipants thought the interviewer suspected them of cheating. Interviewees\nwere mostly sure that their cheating went undetected The candidates who\nworried they were caught did have abnormal comments from the interviewers in\nthe post-survey analysis, but they still were not suspected of cheating. To\nsummarize, most candidates thought they were getting away with cheating â and\nthey were right! Companies: Change the questions you are asking immediately!\nThe obvious conclusion from these results is that companies need to start\nasking custom questions immediately, or they are at serious risk of candidates\ncheating during interviews (and ultimately not getting useful signal from\ntheir interviews)! ChatGPT has made verbatim questions obsolete; anyone\nrelying on them will be naively leaving their hiring processes up to chance.\nHiring is already tricky enough without worrying about cheating. If youâre\npart of a company that uses verbatim LeetCode questions, please share this\npost internally! Using custom questions isnât just a good way to prevent\ncheating. It filters out candidates who have memorized a bunch of LeetCode\nsolutions (as you saw, our custom question pass rate was significantly lower\nthan our control). It also meaningfully improves candidate experience, which\nmakes people way more likely to want to work for you. A while ago, we did an\nanalysis of what makes good interviewers good. Not surprisingly, asking good\nquestions was one of the hallmarks, and our best-rated interviewers were the\nones who tended to ask custom questions! Question quality was extremely\nsignificant in our study, regarding whether the candidate wanted to move\nforward with the company. It was much more important than the companyâs brand\nstrength, which mattered for getting candidates in the door but didnât matter\nrelative to question quality once they were in process. As some of our\ninterviewees saidâ¦ âAlways nice to get questions that are more than just plain\nalgorithms.â âI liked the question â it takes a relatively simple algorithms\nproblem (build and traverse a tree) and adds some depth. I also liked that the\ninterviewer connected the problem to a real product at [Redacted], which made\nit feel less like a toy problem and more like a pared-down version of a real\nproblem.â âThis is my favorite question that Iâve encountered on this site. It\nwas one of the only ones that seemed to have real-life applicability and was\ndrawn from a real (or potentially real) business challenge. And it also nicely\nwove in challenges like complexity, efficiency, and blocking.â One more\nsomewhat subtle piece of advice for companies who decide to move to more\ncustom questions. You might be tempted to take verbatim LeetCode questions and\nchange up the wording or some of the window dressing. That makes sense,\nbecause itâs certainly easier than coming up with questions from scratch.\nUnfortunately, that doesnât work. As we mentioned earlier, we discovered in\nthis experiment that just because a question looks like a custom question,\ndoesnât mean it is one. Questions can appear custom and still be identical to\nan existing LeetCode question. When making questions to ask candidates, it\nisnât enough to obscure an existing problem. You need to ensure that the\nproblem has unique inputs and outputs to be effective at stopping ChatGPT from\nrecognizing it! The questions that interviewers ask are confidential, and we\ncannot share the exact questions that our interviewers used in the experiment.\nHowever, we can give you an indicative example. Below is a âcustom questionâ\nwith this critical flaw, which is easy for ChatGPT to beat: For her birthday,\nMia received a mysterious box containing numbered cards and a note saying,\n\"Combine two cards that add up to 18 to unlock your gift!\" Help Mia find the\nright pair of cards to reveal her surprise. Input: An array of integers (the\nnumbers on the cards), and the target sum ( 18 ). arr = [ 1 , 3 , 5 , 10 , 8\n], target = 18 Output: The indices of the two cards that add up to the target\nsum. In this case , [ 3 , 4 ] because index 3 and 4 add to 18 ( 10 + 8 ). Did\nyou spot the issue? While this question appears âcustomâ at first glance, its\nobjective is identical to the popular TwoSum question: finding two numbers\nthat sum to a given target. The inputs and outputs are identical; the only\nthing âcustomâ about the question is the story added to the problem. Seeing\nthat this is identical to known problems, it shouldnât be a surprise to learn\nthat ChatGPT does well on questions that have inputs and outputs identical to\nexisting known problems â even when they have a unique story added to them.\nHow to actually create good custom questions One thing weâve found incredibly\nuseful for coming up with good, original questions is to start a shared doc\nwith your team where every time someone solves a problem they think is\ninteresting, no matter how small, they jot down a quick note. These notes\ndonât have to be fleshed out at all, but they can be the seeds for unique\ninterview questions that give candidates insight into the day-to-day at your\ncompany. Turning these disjointed seeds into interview questions takes thought\nand effort â you have to prune a lot of the details and distill the essence of\nthe problem into something that doesnât take the candidate a lot of work/setup\nto grok. Youâll also likely have to iterate on these home-grown questions a\nfew times before you get them right â but the payoff can be huge. To be clear,\nweâre not advocating the removal of data structures and algorithms from\ntechnical interviews. DS&A; questions have gotten a bad reputation because of\nbad, unengaged interviewers and because of companies lazily rehashing LeetCode\nproblems, many of them bad, which have nothing to do with their work. In the\nhands of good interviewers, those questions are powerful and useful. If you\nuse the approach above, youâll be able to come up with new data structure &\nalgorithmic questions that have a practical foundation and component that will\nengage candidates and get them excited about the work youâre doing. Youâll\nalso be moving our industry forward. Itâs not OK that memorizing a bunch of\nLeetCode questions gives candidates an edge in todayâs interview process, nor\nis it OK that interviews have gotten to a state where cheating starts to look\nlike a rational choice. The solution is more work on the employerâs part to\ncome up with better questions. Letâs all do it together. Real talk for job\nseekers All right, now, for all of you who are actively looking for work,\nlisten up! Yes, a subset of your peers will now be using ChatGPT to cheat in\ninterviews, and at companies that ask LeetCode questions (sadly, many of\nthem), those peers will have an edgeâ¦ for a short while. Right now, weâre in a\nliminal state where companiesâ processes have not caught up to reality. They\nwill, soon enough, either by moving away from using verbatim LeetCode\nquestions entirely (which will be a boon for our entire industry) or by\nreturning to in-person onsites (which will make cheating largely impossible\npast the technical screen) or both. It sucks that other candidates cheating is\nanother thing to worry about in an already difficult climate, but we cannot,\nin good conscience, endorse cheating to âlevel the playing field.â In\naddition, interviewees who used ChatGPT uniformly reported how much more\ndifficult the interview was to complete while juggling the AI. Below, you can\nview one interviewee stumbling through their time complexity analysis after\ngiving a perfect answer to an interview question. The interviewer is confused\nas the interviewee scrambles to explain how they got to their incorrect time\ncomplexity (secretly provided by ChatGPT). While no one was caught during the\nstudy, their cameras were off, and cheating was still difficult for many of\nour skilled candidates, as evidenced by this clip. Ethics aside, cheating is\ndifficult, stressful, and not entirely straightforward to implement. Instead,\nwe advise investing that effort into practice, which will serve you well once\ncompanies change their processes, which hopefully should be soon. Ultimately,\nwe hope the advent of ChatGPT will be the catalyst that finally moves our\nindustryâs interview standards away from grinding and memorizing to actually\ntesting engineering ability. Mike Mroczka Mike Mroczka, a former senior SWE\n(Google, Salesforce, GE), is the primary author of Beyond Cracking the Coding\nInterviewâthe official sequel to Gayle McDowell's original CTCI. He works as a\ntech consultant and has a decade of experience helping engineers land their\ndream jobs. Heâs a top-rated mentor (interviewing.io, Karat, Pathrise,\nSkilled.inc) and the author of viral technical content on system design and\ntechnical interview strategies featured on HackerNews, Business Insider, and\nWired. He also sometimes writes technical content for interviewing.io (like\nthis piece) and was one of the authors of interviewing.ioâs A Senior\nEngineer's Guide to the System Design Interview. You can find him online at\nmikemroczka.com, LinkedIn, and X. Special thanks to Dwight Gunning and Liz\nGraves for their help with this experiment. And of course a big thank you to\nall the interviewees and interviewers who participated! Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/how-hard-is-it-to-cheat-with-chatgpt-in-technical-interviews",
      "author": "",
      "user_id": ""
    },
    {
      "title": "We co-wrote the official sequel to Cracking the Coding Interview!",
      "content": "These include: The first seven chapters of the book, covering topics such as\nwhy technical interviews are broken, what recruiters won't tell you, why not\nto spend a lot of time on resumes, and how to get in the door at companies\nwithout a referral. Two technical chapters: Sliding Windows and Binary Search.\nOur new take on Binary Search teaches one template that works for every binary\nsearch problem on LeetCode, with only a single-line change you need to\nremember. The Sliding Windows chapter features 6 unique sliding window\ntemplates that make off-by-one errors a thing of the past. EDIT: Beyond\nCracking the Coding Interview is out now! Here's the table of contents: I have\nsome exciting news. Along with Gayle Laakmann McDowell, Mike Mroczka, and Nil\nMamano, Iâm writing the official sequel to Cracking the Coding Interview\n(often called the bible of technical interview prep). It's fittingly called\nBeyond Cracking the Coding Interview. Iâve always wanted to write a book about\ntechnical interviewing. And this is it. And of course it'll draw on all the\nhiring data we've collected over the past decade at interviewing.io. Technical\ninterviews are much harder today than they used to be. Engineers study for\nmonths and routinely get down-leveled despite that. Beyond Cracking the Coding\nInterview, in addition to covering a bunch of new questions and topics,\nteaches you how to think instead of memorizing. Grinding and memorization\nisnât the way in this market (though in fairness, itâs never really the way).\nWith us, youâll still have to do the work, of course, but weâll teach you to\nwork smarter. We added at least thirteen new technical topics (I say âat\nleastâ because weâre still writing, and it might be more like twenty)âand over\n150 new problems. Each problem includes step-by-step walkthroughs, and you can\nwork each problem with our (actually good) AI Interviewer. And of course this\nbook was written in partnership with interviewing.io. Weâve pulled in data\nfrom over 100k FAANG mock interviews on interviewing.io, and we include\nhundreds of curated interview replays from interviewing.io (shared with\npermission of course) â watch people make mistakes and learn so youâre not\ndoomed to repeat them. But itâs not just about interview prep. In todayâs job\nmarket, the bar is higher but itâs also harder than ever to get noticed and\nrun your job search end-to-end. My excellent co-authors killed it on the\ntechnical chapters. I focused on writing the job search stuff, including, but\nnot limited to: How to negotiate, exactly what to say, and how to not screw up\nyour negotiations before they even start How to manage your job search, end to\nend, and balance interview prep with applications and outreach A worksheet to\nhelp you figure out what order you need to engage with the companies youâre\ntargeting to ensure that all your offers come in at the same time How to get\nin the door at top companies without relying on referrals, including email\ntemplates and examples of good and bad outreach An internal look at FAANG (and\nother) company rubrics to help understand what interviewers really care about,\nno matter what company you're applying to What you need to know about\nbehavioral interviews, whether you want to or not, and how to avoid the\nmistakes that even great engineers make A list of very specific questions to\nask your interviewers (not just to look smart but to learn useful things) How\ntechnical interviews got to be so broken and how to get over hating them so\nyou can win I also spend some time on owning and sharing data on how flawed\ntechnical interviewing is and, most importantly, how to manage your psychology\nso you can get past that. I see so many engineers opting out of this interview\nstyle, arguably for good reason. But youâre leaving a lot of good\nopportunities on the table, and it doesnât have to be like that. This book is\nso much of what Iâve blogged about for the last 15 years, but itâs fleshed out\nwith much more detail and actionable advice. If you read it, let me know what\nyou think. Technical interviewing sucks (and so does looking for a job). But\nthis book will help you do it well and get out alive. Purchases of Beyond\nCracking the Coding Interview get a $50 discount for interviewing.io. The book\ncosts $45, so itâs not a bad deal. The book is out in January of 2025, and you\ncan get it on Amazon.",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/we-co-wrote-the-official-sequel-to-cracking-the-coding-interview-introducing-beyond-ctci",
      "author": "",
      "user_id": ""
    },
    {
      "title": "Why engineers donât like take-homes and how companies can fix them",
      "content": "idea that this employer doesn't care if you are a carbon-based life form, as\nlong as code comes out of one or more of your orifices. Take-home assignments\ncould, in theory, be great for both companies and candidates. What better,\nfairer way to evaluate someoneâs ability to do the workâ¦ than to have them do\nthe work? Unfortunately, in practice, take-homes typically suck for engineers.\nWe surveyed almost 700 of our users about their experiences with take-homes\nand interviewed a handful more for deeper insights. We learned a lotâmostly\nabout candidates' poor experiences and negative feelings toward take-homes.\nThey take a lot of time. They donât respect candidatesâ time. Candidates often\nget no feedback. And candidates are almost never compensated. The good news?\nTurns out there are some pretty simple things companies can do to vastly\nimprove their take-home assignments. But before we dive into thatâ¦ Why do\ncompanies use take-home assignments? Take-homes vary a ton by role and company\nin terms of the types of questions, subject matter, length, and intensity. At\ntheir simplest, take-homes can be the same questions as in an algorithmic\ninterview, except done asynchronously. The other extreme is asking candidates\nto build an entire app and deploy it. We were surprised to see how often\ncompanies use take-homes. About 85% of our users got one at some point in\ntheir career, independent of their experience level. Of the users who\nencountered them, they tended to see them as part of the process about 20% of\nthe time, again, independent of their experience level1. Why are take-homes\nrelatively popular among employers? They mostly use them to save time in the\nhiring process. There are, however, some more noble reasons a company might\nuse a take-home assignment: Get better signal during the interview process, as\na take-home can be more indicative of actual work Get a candidate's best work\nout of them in a lower-stress environment than a live algorithmic interview\nand/or attract candidates who donât like algorithmic interviews (of which\nthere are plenty) Broaden the candidate pool by offering a way in for\ncandidates from non-traditional backgroundsâin lieu of a resume screen, which\ntheyâd likely fail, candidates can do choose to do an assignment Accordingly,\nhereâs the relevant part of a great conversation between Vincent Woo of\nCoderPad and Patrick McKenzie (known to Hacker News folks as patio11) of\nStripe, formerly of Starfighter. Vincent: What general sort of high level\nchange do you think that recruiters at tech companies that are roughly\nStripeâs size or bigger ought to make? Patrick: If I could wave a magic wand\nand sell the world on one concept, it would be selling the world on the\ndesirability of work sample testingâ¦ where the way to tell if someone is good\nat something is to have them do the something. Despite enthusiasm for the\ntheory of take-homes and some very well-intentioned reasons, candidates\noverwhelmingly donât like take-homes. Hereâs why. Why donât candidates like\ntake-homes? Itâs about value asymmetry. Though users expressed a lot of\nfrustration with take-homes, we were surprised to see very few take a hard-\nline stance and refuse to do them. Only 6% outright refuse, and 66% of people\ncomplete take-homes all or most of the time. Surprisingly, these stats didnât\nreally change when we looked only at senior engineers. I was expecting that\nexperienced engineers would do them almost never, if at all, but thatâs not\nwhat the data shows. Itâs possible that seniors are just louder in their\ndisapproval. Nevertheless, the more desirable a company, the more likely\ncandidates will do the take-home and feel OK about itâ70% told us they\ncompleted them because they âReally wanted to work at the company and were\nwilling to do what it took.â I found Weedmaps [to be] a very interesting\ncompany. They were the first marijuana related company to IPO. So you'd be on\nthe frontier working for them. I found that exciting. So I applied and they\nhad [a] take-home. I was like, sure, of course Iâll do this. Other reasons our\nusers gave for completion included: âBecause the take-home would be discussed\nat the onsiteâ (38%) and âInteresting/cool assignmentâ (37%). However, many of\nthose who did finish them had such a poor experience that they said theyâd\nnever apply to certain companies ever again. Weâll talk about what makes the\nexperience poor in a little bit. Of the people who refused to do at least one\ntake-home at some point in their career, here were their reasons. Numbers\ndonât add up to 100 because it was a multi-select poll. In addition, we\nobviously donât know how often take-homes are boring or unclear in the wild\n(probably often!), nor do we know how often companies pay people to do them\n(our guess, based on some napkin math, is >10% of the time). So we donât have\nthe true denominator for these stats. Nevertheless, we found these results\ninsightful. The common thread among all of these reasons is value asymmetry.\nThe worst take-homes feel unrewarding to candidates. Even exploitative. Take-\nhome assignments ask a lot of candidates: a significant investment of their\ntime, with an often unclear scope, no guarantee of progressing to the next\nround, often without feedback, and almost always without compensation.\nMeanwhile, the company has basically invested nothing, except to send the\ntask. We heard this a lot. When I'm interviewing, I look for things that are\nproxies for valuing team membersâ¦ or not. If they want me to do a take-home\ntest, and they haven't even spent 30 minutes on a phone screen, I begin to\nsense an asymmetry in our relationship, with their time and resources being\nvery valuable, and mine not being valuable at all. A divergence between how\nmuch effort they want me to put in, and how much they want to put in\nthemselves. It signals that they are more worried about their time than mine,\ntheir costs than mine. It also means they underestimate how much effort it\ntakes to write code, so that if I go to work for them, I am likely to face\ndemands to work uncompensated overtime to meet their optimistic estimates.\nSpending five hours on their one-hour test for nothing leaves hard feelings.\nAnd if they ghost me after the test, I will happily tell every developer who\nasks what cheapskates they are. Is there any relationship between who\ncandidates are and their willingness to do take-homes? Perhaps surprisingly,\nour data says no. We ran a regression to compare our survey respondentsâ\ninterview performance on our platform to how likely they were to do take-\nhomes. The relationship was so weak as to be negligible. Similarly, we ran a\nregression to see if people who look good on paper are more or less likely to\ndo take-homes. The relationship there was negligible as well. In other words,\ncontrary to some popular opinions, youâre not necessarily weeding out your\nbest candidates by doing take-homes, whether you define âbestâ in terms of how\ntheir resume looks or how they perform in interviews. How companies can make\ntake-homes better (and why they probably should) After reading the stats\nabove, you might think that, despite their grumblings, candidates generally do\ntake-homes, and the best candidates wonât be weeded out. So, if youâre one of\nthe many companies that uses them, it may not make sense to invest your\nlimited time into making them better. Itâs not that simple. For some\ncompanies, like the FAANGs, who have extremely strong brands and are known to\npay well, changes are probably not worth it, especially in this market, where\njunior and senior engineers are willing to jump through more hoops than ever\nbefore. If youâre not a FAANG, though, listen up. Here are some questions you\ncan ask yourself to figure out if you should indeed make some changes to your\ntake-homes. First, take an honest look in the mirror and ask yourself about\nyour brand strength. Are you a household name? Does having you on candidatesâ\nresumes give them automatic prestige? Are you known to pay above market? If\nthe answer to all of these questions isnât a resounding yes, your brand\nstrength is probably not strong enough to make people jump through hoops.\nHereâs a sketch to drive that point home. Unless you have a ton of brand\nstrength, candidatesâ willingness to jump through hoops drops off sharply. In\nfairness, I drew this sketch in a boom market. Maybe itâs a bit less steep\nnow, but honestly, Iâm not sure. If you arenât maxing out on brand strength,\nthere are two questions you should ask yourself: What is my take-home\ncompletion rate? What is my offer acceptance rate? If your completion rate is\nbelow, say, 60% (our data shows that candidates complete take-homes around 62%\nof the time), then itâs DEFINITELY time to make a change. Honestly, regardless\nof what our data says, if people arenât completing them at least 85% of the\ntime, itâs probably time to make a changeâlosing more than 15% of your\ncandidates to attrition at any given stage in the funnel is bad. What about\nyour offer acceptance rate? If itâs less than 50% and youâre using a take-home\nalready, thereâs an opportunity to make some improvements. You might be\nwondering what this has to do with take-homes in the first place. To answer\nthat, letâs change how we think about different parts of the interview\nprocess. At face value, every part of the process is there to vet candidates,\nto determine if theyâre the right fit for your organization. However, when\nused correctly, every part of your process should become a selling vehicle as\nwell. This is especially important for companies who do not have a strong,\nwell-known brand. The FAANGs can get away with using their interview processes\nprimarily as vetting exercises because candidates are already sold on the pay\nor prestige or sometimes on the work and the product. When you donât have an\nestablished brand, the candidates who come to you are, at best, open to\nlearning more, and the interview process is the instrument that teaches them.\nWield it accordingly. Though we strongly advocate coming up with great, unique\ninterview questions2 and making sure you have great interviewers, if your\nprocess does have a take-home component, it is one of the more overlooked\nparts of the process when it comes to selling. You have the opportunity to\nhave someone do the actual work that you do! This is your chance to pick the\ncoolest stuff youâve worked on and serve it up to someone on a platter and\nmake it stick in their brains and make them imagine what itâd be like to work\non these kinds of problems every day! Why wouldnât you jump at this\nopportunity? You may think you donât need to sell in this market. But just\nbecause employers have all the power right now, it doesnât mean that will\nalways be the case. And great senior engineers still have a lot of leverage.\nIf, after considering your take-home completion rate and your offer acceptance\nrate, it looks like you do need to make some changes, here are some practical\ntips, based on what weâve learned from talking to our users (overwhelmingly\nsenior engineers who are targeting top-tier companiesâprobably the people you\nwant). Letâs start with what we just talked about: using the take-home as a\nselling vehicle. Make them interesting and relevant to the actual work You're\ngetting a chance to spend a couple of hours with somebody in a take-home\n(metaphorically). Why wouldn't you do everything you can to get them excited?\nPick a problem that you've worked on, and get them hooked on it. Pick the\nkernel of an interesting problem that you've solved, and build something\naround it that will challenge candidates. Something that gets them thinking,\nâI could have done that betterâ or âThis is a different or more efficient way\nto do it.â That's going to be more effective than the standard perks many\ncompanies offer. [Best take-home Iâve seen was an] open-ended system design\nquestion on the type of system I would work on, was meant to simulate a team\ndiscussion on the system we needed to build, and was a great way for me to\nstart thinking about what I'd be working on there. One way you could do this,\nis to have your engineering team keep a shared doc of âcoolâ solutions they've\nfound, or new things they've tried. These can serve as jumping-off points for\ncreating your take-homes. Theâ¦ challenge was for an internal tooling team that\nspecialized in incident response tools; their challenge was to create a scaled\ndown version of a tool already in use at the company. The focus was more on\nunderstanding the domain and customer than wiring up a bunch of complicated\nstuff, and it was a delight. It being a greenfield also gave you an\nopportunity to showcase some software design skills. I did not get this job,\nbut enjoyed the experience and still feel connected to the team. It was\nconceptually related to the sort of work the team was performing, but it was\nsimplified and stand-alone enough to clearly not be unpaid labor for their\nproduct. Just be sure that when you come up with a practical problem that you\nstrip out the annoying parts and focus only on the juicy kernel of the\nproblem, the part thatâs actually cool and lets the candidate be smart and\ncreative. Donât make them do grunt work or wrestle with their dev environment!\n[This] was for a tooling team in Support, where they didn't have a lot of\nexperience creating challenges or interviewing. One of the engineers took a\ndifficult task that he had accomplished recently and just made that the take\nhome challenge. It involved a lot of Ruby version conflict debugging. It was\ncompletely demoralizing and felt like hazing. Keep them short Candidates\noverwhelmingly favor take-homes that respect their time, i.e., short ones. The\nbest were short and brief, took no more than 2 hours and were directly related\nto what I would be doing on the job. Best are realistic and time bound, i.e.,\nlow time investment required. Short and quick take-homes are great. Over 80%\nof survey respondents said that take-homes should take 4 hours or less, and a\nplurality thought that they should take 2 hours. The outliers are interesting.\nUnfortunately, we missed an opportunity to ask about those in the survey.\nTake-homes being short in theory is one thingâ¦ but we got a lot of feedback\nthat take-homes often go far beyond how long companies tell candidates that\ntake-homes should take. Have someone on your team QA the actual length of the\nassignment This disconnect between actual time and expected time is another\ninstance of value asymmetry: companies didn't even bother to have someone on\ntheir team do the take-home themselves and time it. I've done a couple of\nalgorithm questions as take-homes that the interviewer said should take an\nhour. They routinely take longer than that. Companies will say, âdonât spend\nmore than X hours on it,â but then it actually takes 5X that amount. It's just\ntoo much time. And most of the time they didnât give feedback at all even\nthough I spent so much time on it. Companies should clearly communicate the\nexpected time commitment for a take-home. And they should be realistic about\nhow much time it should take. Best was an interesting problem with a realistic\ntime frame. They estimated 2 hours and it took me exactly that, which was\nrefreshing and made the process seem fair. I've done a couple of exercises\nwhere they were truly respectful of my time. The tasks were small, clearly\ndefined, and they gave me a realistic timeframe to complete them. For the best\ntake-home I did, the company told me: âTell us when you're going to start, and\nyou'll have 4 hours. We'll be available over email that whole time, and we'll\nanswer your questions within minutes.â That felt respectful of my time, and\nwas a more reliable signal of my capabilities than a 20-minute algorithms\nexercise. To get a realistic estimate, companies could simply QA their own\ntake-homesâjust by having someone on your team take it, and time them. Still,\nsome candidates will spend more time anyway, because they really want to work\nfor a certain company. And it can be easy for candidates to go down a rabbit\nhole and get most of a take-home done in the first few hours, then spend\nanother day or more, perfecting it to give themselves a better chance. Do you\nwant me to literally only work two hours on something that's clearly going to\ntake 10 to really be able to have a conversation with you about how I think\nabout things? Because two hours of decisions isn't as good as 10 hours of\ndecisions. Itâs okay if candidates want to put in extra time, but it should be\nmade clear that that's not the expectation. Set a clear scope, related to the\nrole The scope was poorly defined, which made the assignment not only tedious,\nbut also seemed like a waste of time. Having clear, straightforward\ninstructions can significantly enhance the take-home experience for\ncandidates, making them feel purposeful and relevant. The best take-homes are\nthose that directly align with the actual job. When candidates are asked to\nsolve a simplified version of a real problem your company is facing, it not\nonly tests relevant skills, but also gives a candidate insight into what work\nat your company would be like, which is really what selling is. (This is, of\ncourse, assuming that you believe what youâre working on is coolâ¦ If you\ndonât, how will you ever convince others?) One was a great learning experience\nbecause I had to solve a problem similar to what I would face in the job. It\nwas concise and focused. Being able to ask questions before or during the\ntake-home, e.g., having a direct contact point whoâs an engineer at the\ncompany, can also be a big plus. Be thoughtful about where in your process you\ninsert the take-home, and give candidates a choice between a take-home and\nsomething else For take-homes early in the process, before speaking to a human\nWe expect that many of the companies reading this piece have take-homes as the\nfirst step in their process, before ever talking to a human. This decision\nisnât very popular. If a company calls me for a screening interview, it means\nthey've read my resume and cover letter, and not immediately dismissed my\napplication as inappropriate. It also means they're putting a person on a\nphone call with me for the duration of the screening interview. This is\nsymmetric, my effort matches theirs. [I] did a take home that was\nautomatically sent to me after applying, before even speaking to a human. The\nfeedback was 'you are too expensive,' no feedback on the coding. Company needs\nto build an investment with the candidate firstâthey shouldn't ask for it\nbefore meeting the candidate at least once. That said, take-homes can be a\ngreat way to let candidates who donât look good on paper show what they can\ndo, and those candidates are more likely to complete them. To prevent\ncandidate unhappiness/attrition, give them a choice. Either submit a resume or\ndo the take-home assignment or both. If you go this route, though, design a\ntake-home that you trust. Weâve seen companies take this approach and then\nthrow out perfect-scoring take-homes when they didnât like the resume. If you\nuse a take-home, then respect your candidates enough to follow up with the\nones whoâve done well, even if they donât look good on paper. For take-homes\nlater in the process Another way to make take-homes purposeful is to give your\ncandidates an explicit choice about whether theyâd rather do a technical\ninterview or a take-home. Engineers are, in fact, split on which theyâd\nprefer. Giving them a choice allows them to showcase their skills in the\nformat they prefer and feel best prepared for. If you have good questions, you\nshould be able to get good signal from either. Only 10% of respondents told us\nthat they were given the choice of take-home versus technical interview. So\nthere is an opportunity for more companies to do this. It's a candidate-\nfriendly gesture that shows empathy and can help candidates shine. Many\ncandidates have spent months preparing for standard technical interviews. So\nit can feel anticlimactic when they find out that a company they're excited\nabout doesn't do them. Others get so nervous in a live interview that they\ndonât perform. I rarely don't pass take-home assessments, but I often fail to\npass live interviews. Interestingly, one user we interviewed told us that they\nspend far less time on a take-home compared to preparing for a live technical\ninterview. And because of that they prefer take-homes. I prefer take-homes\nover all other assessments because I find I spend far less time on take-homes\nthen I do preparing for live interviews. It's hard to overestimate the amount\nof extra time I spend preparing for a technical interview, compared to doing a\ntake-homeâfor me itâs maybe 10 times as much. I've spent hundreds of hours,\nmaybe 500 hours, over the course of my career preparing for technical\ninterviews. And if I have one pop up, I can't just drop everything and do it\nright away. I have to spend a lot of extra time just ramping up for a\nparticular interview, in addition to the hundreds of hours that I've done.\nGive candidates a good, rational reason to do the take-home Clear\ncommunication about the purpose of a take-home in the hiring process, as well\nas why itâs rational to spend time on it, is important for candidates. Itâs a\nway to make sure it feels purposeful and not like a random task. One way to\nmake the take-home feel deliberate is to replace some parts of your process\nwith it. A standard process without a take-home has a recruiter call followed\nby a technical phone screen followed by an onsite (virtual or otherwise). The\ntechnical phone screen usually lasts about an hour. The onsite usually lasts 6\nhours. Letâs say your take-home takes 2 hours to do. You can make it replace\nthe phone screen and one of the onsite rounds, which nets out to the same\nnumber of hours spent. If you go this route, we recommend doing the math\nexplicitly for candidates and showing them that the time they spend on the\ntake-home is equivalent to the time theyâd be spending on a process without\nit. Another way to make the take-home feel deliberate is to incorporate it\ninto the onsite, where at least one of the rounds, if not more, will include a\ncode review and/or thoughtful discussion about tradeoffs and choices made.\nThis should be standard practice, but isnât always. 32% of our users said\ncompanies had told them this, and it was the reason they decided to do a take-\nhome. The best take-homes were ones that we discussed in the first rounds of\ninterviews. The worst ones were ones that I submitted and we never talked\nabout them again. Ideally, you do both of these things together, and very\nclearly explain to candidates both the math and how the take-home informs the\ncontent of the onsite. Compensate candidates Probably the most striking result\nof our survey was that 58% of candidates think that they deserve compensation\nfor completing take-homes. Yet only 4% reported ever receiving it.\nCompensation can shift candidate perceptions of the hiring process and of the\ncompany: They compensated me for my time, which made the process feel very\nprofessional and respectful. It was a completely open source codebase and so\ntheir process was the exact same as someone that was an employee: here's the\nticket with the information to do it, set up the environment, download all the\ncode, get everything running. They gave me a few different tasks I could\nchoose from, I could pick two, and if I completed them I would be compensated\na fixed rate, which was $100 for each task. Which in terms of the time I spent\non it, is still really cheap for them. If candidates know theyâre going to be\npaid for their work on a take-home, theyâll be more likely to complete it as\nwell. Compensating candidates is a clear gesture that shows you value their\ntime and effort, that thereâs more symmetry in the relationship. It also goes\nhand-in-hand with time: paying also forces a company to scope the take-home to\na reasonable number of hours. So it's a forcing function for good behaviorâif\nyou canât afford much, then don't make the take-home too long! How much to\npay? Responses about how much companies should pay for take-home assignments\nwere split. Fixed amounts: Just over half of respondents (52%) suggested\nspecific and reasonable fixed amounts, ranging from $50 to $500. Hourly rates:\nThe other almost half (47%) favored an hourly rate, with suggestions ranging\nfrom $50 an hour and upward (average of $217 an hour). Some suggested that the\nrate should correspond to the salary of the position being applied for, or be\ncomparable to what an employee at that level and company would earn. As one\nuser put it: Maybe just pay market? One antipattern when it comes to comp is\nNOT having a set rate, asking the candidate to name their price, and thereby\nputting the candidate in a position where they feel like they need to\nnegotiate. In this scenario, the candidate has to negotiate twice: once on the\ntake-home and once on their actual comp, with the worry that negotiating too\naggressively on the take-home might count them outâ¦ or not aggressively enough\nanchoring the company to lower compensation down the line. No one needs these\nmind-games in an already stressful process. Just have a set rate, for godâs\nsake. Symbolic compensation: This is probably not the best option, but a\nhandful of survey respondents (1%) did mention that a minimal symbolic\ncompensation would do. While 1% is small, we found this interesting to include\nbecause, when we interviewed people, two of them mentioned this. I think any\ncompensation at all has symbolic value. A $100 Amazon card would impress me. A\n$50 Amazon card and a company t-shirt would at least not insult me. Itâs kind\nof a consolation prize to say, âNo hard feelings.â I feel like a couple meal\nvouchers would do it these days. Of these options, weâd recommend a reasonable\nfixed amount based on the task, and the actual time itâs supposed to take. And\nof course you know how long it takes because you had one of your engineers do\nit themselves, right? Right?? Give feedback Lack of feedback was the primary\nreason our survey respondents said their experience with a given company was\nbad. Regardless of interview type, weâre always pro feedback, but feedback is\nespecially important for take-homes, because in a way they ask more of a\ncandidate. Offering constructive feedback, regardless of the hiring decision,\nrespects the candidate's effort on the take-home. Despite the time and effort\nthey invested in completing take-homes, many of our survey respondents said\nthey received no feedback at all. This was seen as demoralizing, and it\ndeterred candidates from applying to future opportunities at those companies.\nGetting rejected without having a chance to discuss the code with anyone is a\nterrible experience. It is really discouraging spending a large amount of time\nto find out you are rejected without explanations. They provided no feedback\nafter submission, which made the whole effort feel unappreciated and one-\nsided. Incidentally, the main reason companies donât give feedback is fear of\ngetting sued. As it turns out, literally ZERO companies (at least in the US)\nhave ever been sued by an engineer who received constructive post-interview\nfeedback. Thanks to Dan Fennessy for all the behind-the-scenes work on this\npost. Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/why-engineers-dont-like-take-homes-and-how-companies-can-fix-them",
      "author": "",
      "user_id": ""
    },
    {
      "title": "The unwritten rules (till now) of negotiating with Meta",
      "content": "the contents of this blog post in a video. Pick your poison. EDIT: This post\nis based on stories from users who were interviewing for E4-E6 SWE and MLE\nroles at Meta. Other, more specialized roles may have different processes than\nwhat's described here. EDIT 2: As of Q1 2025, it looks like Meta is sometimes\nforegoing team matching in favor of driving candidates to their Monetization\norg (which apparently has a lot of open headcount). If this happens to you,\nafter you pass the hiring committee, instead of entering team matching, your\nrecruiter will tell you that youâve been assigned to this particular org and,\nif you proceed, youâll just get an offer. You wonât get to talk to your future\nmanager, and youâll find out team details a week after you join. From what we\nknow, itâs possible to insist on team matching instead, with the downside that\nitâll take an unknown amount of time rather than certainty. Why does this\nmatter? If youâre looking to use your Meta offer primarily as leverage with\nother companies, this is a great thing because youâll get numbers quickly. If\nyouâre seriously interested in Meta, then this could be good or bad and\ndepends where you are in the process and how much you want to work on\nmonetization versus other things/how much you want to meet your manager before\nyou work for them. So if youâre seriously interested in Meta, whether this is\ngood or bad depends on where you are in the process. If you need them to move\nquickly, itâs great because you know you wonât be stuck in team matching.\nHowever, if you need them to slow down because you arenât as far along with\nother companies or because you want to work in a different org, you may want\nto ask your recruiter to stick with the old team matching process. In our\nexperience, itâs ok to ask this. Your recruiter may not tell you outright that\nthatâs an option, but if you ask, they will probably do it. Of course, you may\nbe stuck longer than you want. But at least then you will have more of a say\nin what you work on. At interviewing.io, one of the services we offer our\nusers is salary negotiation. Even though Iâm the founder, I still do many of\nthe sessions myself because they give me an invaluable insiderâs perspective\non whatâs actually going on in the engineering market, what different\ncompaniesâ offers look like, how companies extend offers, what kinds of\ndeadlines they give, and how much they go up in compensation, under what\ncircumstances. Access to this kind of data is great because it helps me make\nbetter business decisions. But sometimes I see questionable patterns of\nbehavior among companies. Recently, Iâve observed a string of practices at\nMeta that I find reprehensible, and thatâs what this post is about. Iâve seen\nthe same practices with enough candidates, and across enough different titles\nand positions, that itâs become clear to me that they are not isolated\nincidents or a rogue recruiterâs doing but rather a consistent implementation\nof a deliberate strategy that comes from the top. Iâm writing about this for\ntwo reasons. First, if youâre negotiating with Meta, you need to know how they\noperate and understand the unwritten rules of the game. If you do not know the\nrules, you will fail â long before you even start negotiating. Second, Iâm\nhoping that someone at Meta sees this post and that maybe itâll spark an\ninternal discussion about changing the rules. By the way, if Iâm wrong, I will\ngladly issue a retraction and a public apology. Please contact me if youâre a\nrecruiter at Meta and find something incorrect in this post. My email is\naline@interviewing.io. Lastly, if youâre about to interview there or are\ninterviewing there already, please read our free, long-form guide to their\ninterview process and questions. Meta basically has a monopoly on FAANG hiring\nright now I mentioned above that we do salary negotiation, but our main\nbusiness is mock interviews. We offer anonymous mock interviews in the style\nof a bunch of different companies (mostly FAANGs). This means we know how many\npeople are practicing for interviews at Google vs. Meta vs. other FAANGs, and\nthat lets us guess (pretty accurately) how much hiring is actually happening\nat these companies. You can read in way more detail about how all the FAANGs\nare doing in our recent blog post where we made 2024 predictions based on our\nproprietary data. But while I was writing that post, I noticed something odd.\nMeta was hiring way more engineers than any of the other FAANGs. In fact, Meta\nhiring is up more than 10X since January of last year. You can see that more\nrecently Amazon has picked up a bit, but itâs very recent and not enough to\ndrive major change in other companiesâ behaviors (at least not yet). And, yes,\nNetflix is hiring too, but Metaâs eng team is more than 10X the size of\nNetflixâs, so in the absolute, Netflixâs hiring volume isnât enough to balance\nMeta out. For all intents and purposes, Metaâs the only FAANG thatâs really\nhiring at scale â and theyâre currently getting away with treating candidates\nreally poorly as a result. How Meta negotiates, given their effective monopoly\non eng hiring Hereâs how Meta runs their hiring process. These practices have\nbeen consistent across every negotiation client weâve had in the past 6 months\nor so. Metaâs hiring is centralized, which means that you enter one big\ninterview process thatâs completely divorced from which team you might end up\non and you interview with people whom you might never work with again. If you\ndo well, there will be a team matching component after you pass the onsite but\nbefore you get an offer1. With that in mind, hereâs how they run their\nprocess, once you get the green light. Team matching. This can take days or\nweeks, depending on how many teams you speak to and how many conversations you\nhave with the people on each team. You'll speak with hiring managers to gauge\nfit and chemistry, and if youâd like, you can also talk to peers. We've heard\nthat sometimes you get the chance to talk to a handful of teams, and sometimes\nit's over 10. After your team-matching conversations, your recruiter will ask\nyou to choose a team. In order to move forward, both you and the hiring\nmanager have to opt in2. Likely down-level you. Sometime during team matching,\nyouâll probably find out that youâve been down-leveled. Often, your recruiter\nwill cite your performance in the system design portion (and sometimes the\nbehavioral portion). According to a recent survey we did, something like 55%\nof Meta candidates get down-leveled (more likely for generalist SWE roles,\nless likely for more niche roles like ML). Make a lowball offer with just a\nfew days to make a decision. Once youâre done with team matching, things get\ndicey. Your recruiter will make you a lowball offer thatâs often $50k or more\n(!!) below the average TC on levels.fyi. Moreover, you usually just get a\ncouple of days to make a decision. If you were down-leveled, your lowball\noffer may include a small signing bonus as a consolation prize. Refuse to\nnegotiate unless you can show them other offers from comparable companies.\nYour recruiter will say something like, âIf youâd like to increase your offer,\nI can take this to the compensation committee, but I need a compelling reason\n[i.e., another offer].\" If you have other offers, they will apologize for the\nlowball offer, citing that itâs âautomatic numbers from our computerâ and\nraise the numbers by $100K or more (in first yearâs TC). If you do not, you\nwill be stuck with a lowball offer, though you may be able to negotiate a\nsmall signing bonus if the offer didnât come with one already. How to\nnegotiate with Meta Below are the steps for negotiating with Meta in a hard\nclimate where they have a monopoly on hiring. We hope that most of these wonât\nbe necessary in the future. They are: Donât share anything with your recruiter\nMake sure you have other offers Slow-play team matching Build rapport with\nevery hiring manager you talk to Actually negotiate (this is the easy part)\nDonât share anything with your recruiter We wrote a whole post about how to\navoid sharing information with your recruiter and why this is so vital. If you\nshare where youâre interviewing or how far along you are, or if you start\nnegotiating prematurely, the strategies below wonât work. Please read our post\non not shooting yourself in the foot during negotiations before you continue!\nYou should also be aware of a few tricks specific to Meta recruiters. If\nyou're not forthcoming about where else you're interviewing, they may say a\nfew sneaky things. First, they may say something like, \"Well, we just want to\nknow where you're interviewing so we can intro you to others who interviewed\nat those companies but ultimately chose Meta.\" Don't fall for that early in\nthe process. It's a trap to get information out of you. You can always ask for\nthose intros later, when you're negotiating and it's the right time\ninformation about your other offers. The other thing they do is fish, saying\nsomething like, \"Well, in case you're interviewing at {Google, Netflix, some\nother big company they don't want to lose candidates to}, just so you know,\nthey move kind of slowly, so we may not be able to wait.\" There, the Meta\nrecruiter's goal is to get you to say, \"Oh, no, don't worry, I'm not\ninterviewing at Google!\" Now, you've lost leverage in their eyes because\nthat's one less competitive company they might lose you to... and they'll be\nmore confident about lowballing you later on. Make sure you have other offers\nAs you may have guessed from reading the previous section, itâs critical to\nhave other offers, and not just any offers but ones from top-tier companies\nwho pay very competitively3. We realize that saying âhave other offersâ\ndoesnât capture the blood, sweat, and tears that go into months of interview\nprep, applications, emails, recruiter calls, and interviews. We know itâs\nhard, but as youâll see, it makes a huge difference in your compensation.\nGetting those offers doesnât start when youâve received your Meta offer. It\nstarts months before. Make sure that you get enough initial conversations with\nother FAANGs, FAANG-adjacent companies, and late-stage sexy startups to end up\nwith at least one other offer, ideally at least two. Depending on your\ninterview performance, this might be anywhere from 4 to 10 initial\nconversations.4 Slow-play team matching Having your offers come in around the\nsame time is critical for any negotiation, but itâs especially important with\nMeta because they take such a hard line â without other offers, they will not\nmeaningfully budge. Obviously, youâll want to start your conversations with\nother companies well in advance of your Meta interviews and do everything you\ncan to make sure they all come in at the same time. However, even with your\nbest efforts, itâs not guaranteed that your timing will match up. Hereâs how\nto make sure that your offers come in at the same time: slow-play Metaâs team-\nmatching process. Team matching is actually the part of your Meta journey\nwhere you have the most leverage and power. Why leverage? At this point, they\nknow they want you, but they canât yet hold an offer deadline over you. Weâve\nalready mentioned that once they make the offer, your recruiter is going to\npush very hard to have you accept, often giving you a deadline of something\nlike two days. In your recruiterâs eyes, youâre a ticking time bomb, where for\nevery day you donât sign, the deal loses momentum, and your odds of signing\ndrop off. Recruiters are also evaluated on how many candidates they close, so\nitâs in their interest to create a false sense of scarcity in order to rush\nyou and to use high-pressure sales tactics to get you to seal the deal. And\nwhat power do you have? It turns out you can really control how long team\nmatching takes, within reason. If youâre still wrapping phone screens with\nother companies, slow-playing is the best thing you can do. Hereâs how to do\nit. Weâve recently heard that Meta is now insisting that hiring manager\nconversations happen in series, but even if Meta lets you talk to multiple\nhiring managers concurrently, try to serialize those conversations as much as\npossible. For instance, if you hear from your recruiter that youâre going to\nstart team matching on a Monday, and they offer to set up some calls for\nWednesday, ask to do the first call on a Friday and the next call the\nfollowing Tuesday. When we advise our users to do this, we often get pushback\nbecause theyâre worried that slowing things down will make them look\ndisinterested/not serious. We promise you thatâs not the case. The biggest\nrisk you run when you slow-play team matching scheduling like this is losing\nthe chance to work on a specific team. If you find that your recruiter has\nproposed what seems like the perfect team for you, you can and should\nprioritize doing that call as soon as possible. In addition to serializing\nyour hiring manager conversations, for each team, ask to talk to a few\nindividual contributors on teams that youâre serious about. This isnât just a\nstalling tactic. These are the people youâll be working closely with every\nday, and theyâre the ones doing the job you may have in the future. Theyâre\nalso less likely to do hard sells, and if you ask thoughtful questions, youâll\nlearn a lot about what to expect. Weâre always surprised by how few candidates\nask to speak to their future peers, out of a mistaken concern that asking for\ntoo much will make them look disinterested or unengaged. Just like with hiring\nmanager calls, if you need to slow things down, we recommend scheduling calls\nwith your peers a few days apart. Situations where slow-playing may bite you,\nand how to know the difference We have seen two instances when our advice\nabout slow-playing could backfire. You probably remember when companies\nstarted to freeze hiring aggressively in mid-2022 â if you didnât get matched\nbefore the ax came down, you were left out in the cold. Much more recently, we\nheard from some of our users that Meta put a pause on team matching for E4\nroles (largely outside the Bay Area), and many candidates were stuck in a\nholding pattern (while Meta figured out headcount constraints, though it looks\nlike itâs since been resolved, and picking back up in earnest. Slow-playing\nand then getting stuck is obviously an unfortunate situation, as is being on\nthe wrong end of a hiring freeze, but these situations are rare, and in our\nhumble opinion, not worth optimizing for â in most cases, you will not be\ndealing with an impending freeze or stalled matching. If youâre unsure about\nteam supply or the state of hiring, you can do two things: Always ask your\nrecruiter up front to share the number of teams that candidates have had the\nchance to talk to, on average, recently. Look at our real-time graph of FAANG\nhiring volume (as opposed to the graph above, which is a monthly snapshot). In\nthis real-time graph, you can see what portion of our mock interview volume is\ndedicated to practice in the style of Meta, Amazon, and Google. Historically,\nour purchasing behavior has lined up very well with whatâs actually going on\nin the market, and the rate of change in this graph should give you an idea of\nwhether Meta is slowing down. As you can see, there was a dip in February (and\none in December, but that almost always happens because hiring slows down over\nthe holidays). If you see dips like these, youâll want to make sure that you\ndo (1) and ask your recruiter about the situation inside. You may also choose\nnot to slow-play for too long. There's one more situation where slow-playing\nmay bite you. If you match with a team and really click well with the manager,\nto the point where you have your heart set on it, it may be wise to accept\nthat team instead of trying to drag things out. We've heard of times where,\neven if the candidate asked the manager about open headcount and confirmed\nthey didn't have to rush, the role got filled from under them (they were able\nto talk to other teams afterwards but missed the chance to be on that specific\nteam). If a specific team feels irreplaceable to you and you'd be crushed if\nyou didn't get it, then that may be more important than maximizing your\nnegotiation. Build rapport with every hiring manager you talk to Outside of\nusing the team-matching process to control your timeline, there is one other\nimportant tactical piece of advice: Do your best to build rapport with hiring\nmanagers. As we said above, recruiters are trying to close the deal. Thatâs\ntheir job. Hiring managers, on the other hand, are trying to lay the\ngroundwork for a good working relationship with you. As a result, their\ninterests are much more aligned with yours. Of course, they still want to\nclose you, but itâs not worth it to them to employ high-pressure tactics, and\nitâs not something theyâre trained in or comfortable with (in fact, many of\nthem hated these tactics when they were on the other end of it while looking\nfor work)5. As such, hiring managers will generally be a lot more transparent\nwith you about how much time you actually have to make a decision, and their\nanswers will likely be very different from the ones you get from recruiters.\nWeâve advised all of our Meta candidates to ask their prospective hiring\nmanagers about when they realistically have to make a decision by, and the\ndifferences between what the hiring manager has told them (âTake your time;\nyou have a few weeks at least.â) and what their recruiter has told them\n(âWeâre talking to a lot of candidates for that team. To ensure your spot, you\nshould make a decision in the next few days.â) are stark. Thereâs simply no\ndownside to building rapport with hiring managers. At worst, you make a\nprofessional connection. At best, you get a head start on a great working\nrelationship with your new boss. One practical note: Always ask your hiring\nmanager for their email address in case you have more questions later. This\nway, if your recruiter starts telling you that you need to make a decision by\nFriday, you can ping your hiring manager, explain that youâre still thinking,\nand ask if itâs OK to take a few more days. Almost always they will say yes.\nActually negotiate (this is the easy part) If youâve done everything else in\nthis post, the negotiation is the easy part. By now, youâve wrapped up team\nmatching, chosen a team, and have likely gotten an aggressive offer deadline.\nYou have also not shared any offer details till now. As we said at the\nbeginning of this post, the success of your strategy hinges on the recruiter\nnot being aware of the other companies youâre interviewing with. This will be\nthe first time they find out about it, and that will put them on their\nproverbial back foot. To respond to the offer, you can send an email6 that\nlooks something like the below. The details will differ, and how much you\nreveal about the other offers will vary, but hereâs the general idea. Hey\n[Recruiter name], Thank you so much for the offer, for working with me\nthroughout this process, and for all your help with team matching. I wanted to\nshare some details with you. I currently have offers from {Company 1},\n{Company 2}, and {Company 3}. {Company 1} has offered me a significantly\nhigher base salary of $220k. {Company 2} has a comparable base but has offered\nme significantly more equity: $500k. I know {Company 2} is a startup, but\ntheyâre late stage and handing out RSUs. Those RSUs are as valuable to me as\npublic company equity. Finally, {Company 3} has thrown in a meaningful signing\nbonus, and their performance bonus is actually at 25%, not 15%. Iâm very\nexcited about the opportunity to work at Meta and about the team. {Insert some\nauthentic reasons why youâre excited about the company, the team, your new\nboss, etc.} Itâd be great to see a meaningful increase in compensation to make\nmy decision easier. Thank you, and I look forward to hearing from you. By the\nway, this isnât the only approach you can take, and with other companies, you\nmight have better luck with the Reverse Used Car Salesman. However, in our\nexperience, if you donât share offer details, your Meta recruiter will\nimmediately ask you to share, so you might as well control the flow of\ninformation. In the template above, Iâve assumed that not all of your offers\nare stronger than Metaâs across the board, which is why Iâve cherry-picked\nwhich pieces to share. Sometimes, if youâre lucky, youâll have multiple offers\nthat have a higher base, more equity, and a higher signing bonus. In that\ncase, itâs less of a game of skill â just throw the numbers at them, and\ntheyâll exceed the other offers without much prompting. If you run this play,\nyour recruiter will apologize for low-balling you, blaming the âcomputerâ for\ngiving them those numbers. Then, like clockwork, you will see a $50k to $150k\njump in your offer (precisely how much depends on where your other offers are\nfrom and how strong they are).7 Now, whether you take that offer is up to you.\nSome closing thoughts. Iâm a capitalist. Metaâs behavior here is aggressively\ncapitalistic, if short-sighted â once other FAANGs start meaningfully hiring\nagain, and Meta employees figure out that thereâs a $150k comp differential\nbetween people with the same job title, theyâre going to pay the piper and\nlikely see a bunch of attrition. Ultimately, the market will correct these\npractices. However, I also believe that individuals have the right and duty to\nbe as informed as possible and to wield whatever weapons in their arsenal to\nadvocate for themselves, rather than waiting on the mercy of slow, indifferent\nmarket forces. As such, we hope this post has given you some ammunition in\nyour negotiations and helped reduce the information asymmetry between you and\nMeta, a huge, aggressive player with basically a monopoly on eng hiring at the\nmoment. And we hope that if anyone from Meta is reading this, itâll spark some\ninternal conversations about whatâs right. And if they donât, other FAANGsâ\nrecruiters will swoop in soon enough. Want to know if youâre ready to\ninterview at Meta? Do anonymous mock interviews with real Meta interviewers,\nand see exactly where you stack up. See available times Footnotes",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/how-to-negotiate-with-meta",
      "author": "",
      "user_id": ""
    },
    {
      "title": "I love meritocracy, but all the recent anti-DEI rhetoric is bad",
      "content": "technical recruiting marketplace. In some ways, Iâm the meritocracy hipster\nwho was writing about how eng hiring should be meritocratic and about how\nquotas are bad, way before saying either was cool. At interviewing.io, my team\nand I have been trying to make hiring meritocratic for the last decade.\nBriefly, we do anonymous mock interviews. If people perform well in those\ninterviews, they get introduced directly to decision-makers at top-tier\ncompanies, regardless of how they look on paper. 40% of the thousands of\npeople weâve helped were excellent engineers who did not look good on paper\nand would NOT have gotten in the door through traditional, âmeritocraticâ\nchannels. Many of those engineers were rejected based on their resumes by the\nvery same companies where they were later hired through us. Recently, thereâs\nbeen a lot of pro-meritocracy, anti-DEI rhetoric. The most salient example is\nAlexandr Wangâs (CEO of Scale AI) tweet about how their hiring process has to\nbe meritocratic (including a catchy new acronym, âMEIâ). Today weâve\nformalized an important hiring policy at Scale. We hire for MEI: merit,\nexcellence, and intelligence. This is the email Iâve shared with our @scale_AI\nteam. âââââââââââââââââââ MERITOCRACY AT SCALE In the wake of our fundraise,\nIâve been getting a lot of questionsâ¦ â Alexandr Wang (@alexandr_wang) June\n13, 2024 The post got a resounding âGreat!â from Elon Musk a half hour later,\nfollowed by a wall of accolades from the Twitterverse. Since then, a\nâmeritocracy boardâ has sprung up as well. If you read Wangâs post carefully,\nyouâll see that he provides no specific examples of how Scale AI makes hiring\nmeritocratic and doesnât share any details about their current hiring process.\nI donât know anyone from the Scale AI team personally, but after doing eng\nhiring in some form or another for over 15 years, I have questions. Does Scale\nAIâs hiring process differ substantially from other companiesâ? Or are they\ndoing the same thing as everyone else: recruiters look at resumes, pick people\nwho have top brands on their resume, and interview them? If their process is\nindeed like everyone elseâs, no matter what they say, theyâre no more\nmeritocratic than the companies who tout DEI hiring practicesâ¦ and are just\nvirtue signaling on Twitter. Iâll be the first to admit that DEI is\nideologically flawed because of its emphasis on race and gender-based outcomes\nand its insistence on equality of those outcomes. In the last decade, weâve\nseen some pretty bad DEI practices, the most egregious being a company looking\nup candidate photos on LinkedIn and rejecting qualified white, male\ncandidates. (I talk more about the worst-offending hiring practices Iâve seen\nover the last decade in the section called The dark side of diversityâ¦ and two\nstories of diversity initiatives gone wrong below. If you just want the juicy\nbits, read that part.) However, yelling âMeritocracy!â as if itâs a fait\naccompli is just as harmful as the worst parts of DEI. In the last decade,\nweâve seen countless companies claim to be meritocratic but refuse to talk to\ncandidates unless they had a CS degree from one of a select few schools. There\nis nothing meritocratic about that. After seeing the pendulum swing back and\nforth a bunch in this space, Iâd even go so far to say that, ironically, the\nDEI movement has done more for meritocracy than the loud pro-meritocracy\nmovement is doing right now. Iâm delighted that âmeritocracyâ is no longer a\ndirty word. But, just saying it isnât enough. We have to change our hiring\npractices. We need to stop using meritocracy as a shield to preserve the\nstatus quo. If we could instead put into practice the best part of DEI â\nopenness to hiring candidates from non-traditional backgrounds while\neliminating the toxic hyperfocus on race and gender and the insistence on\nequality of outcomes, then we could create a real meritocracy, which is what\nmost reasonable people actually want.1 A quick disclaimer before we go\nfurther. To the right, DEI has come to mean mediocrity, and as such, itâs\npitted, apples to apples, against meritocracy. That is not the intent here.\nWhen I talk about DEI, Iâm not talking about the political side of it or how\nitâs often co-opted by the left as a gateway to Marxism. Similarly,\nmeritocracy has been co-opted by the right to justify racism, eugenics, and\ngod knows what other horrid things. Both extremes are bad. Iâm trying to shed\nall political associations from either word and to just talk about them purely\nas hiring ideologies. DEIâs outcomes problem On its face, increasing diversity\nsounds great. Some groups are underrepresented in tech, likely because of\ninequality of opportunity. Talent is distributed uniformly, opportunity is\nnot. Letâs fix it! Twitter threads like this one (from an engineering leader\nat Google) are hard to argue with. You should read the whole thing â itâs\nabout a (white) lumberjackâs son who ended up as one of the founding employees\nat SpaceX. Everyone loves SpaceX, and thinks of Elon as the genius founder\nthat invents new types of rockets that are cheaper, faster, more efficient.\nIt's fun to think of it as SpaceX versus NASA, or Silicon Valley vs Aerospace.\nBut let's talk about D&I;, and logs. Logs as in timber. ð² â Mekka ðx7\n@mekkaokereke@hachyderm.io (@mekkaokerekebye) January 5, 2019 And indeed,\nostensibly, DEI is hard to argue against because it speaks to our innate\ndesire for fairness and equal access to opportunity. Many DEI leaders honestly\nbelieve this. However, despite the good intentions, in practice, DEI tends to\nlaser focus on race and gender outcomes, and that is hard to argue for. Over\nthe years, Iâve seen claims that diverse teams perform better, as well as\nclaims that one must have a diverse workforce if one has a diverse customer\nbase. Though itâs often stated as fact, the former is inconclusive â there are\nstudies with clear results for AND clear results against.2 To the best of my\nknowledge, the latter point is unsubstantiated as well â isnât the hallmark of\na good designer that they be able to design for customers who are different\nthan they are?3 The arguments for diversity are inconclusive, and as such, the\nultimate measure of success for diversity isnât about the performance of an\norganization or about customer satisfaction. Those are packaged up as obvious\nside benefits. The way we measure success for diversity is tautological:\nsuccess is measured by the diversity of our workforce. What does that mean? In\npractice, recruiting orgs usually define success by looking at some\ndemographic and its representation in the general population. So, in the case\nof women in tech, women make up half the U.S. population, so 50% of engineers\nin an organization should be women. Similarly, 12% of the U.S. population is\nBlack, so for hiring to be equitable, 12% of the engineers in an organization\nshould be Black. Likewise, 19% of the U.S. population is Hispanic, so 19% of\nengineers should be Hispanic, and so on. Whatâs the problem with this\napproach? It does not account for inputs. The most basic input is: How many\nfemale engineers are there in the US? And how many Black or Hispanic engineers\nare there in the US? The answer: not enough. Only 20% of CS graduates in the\nUS are women. And there are also not enough engineers of color to get to race\nparity either. Only 6% of CS graduates in the US are Black, and only 7% are\nHispanic.4 Those numbers get even more grim when you pare them down to how\ncompanies usually hire: from top-ranked schools. Weâll talk more about this\npedigree-based approach to hiring when we discuss the pitfalls of meritocracy.\nFor now, suffice it to say that a few years ago, we ran the numbers to show\nthat getting to gender parity in software engineering is mathematically\nimpossible given companiesâ focus on pedigree; though it was unfashionable to\nadmit it, we called out that there really is a pipeline problem. And then\nthereâs this issue: What portion of those candidates are even applying to your\ncompany in the first place? And what portion of those applicants are actually\nqualified to do the work? The ONLY way to really take race and gender bias off\nthe table is to do blind as much of the hiring process as possible and then to\naccept that you may not get the numbers you want but that your outcomes will\nactually be fair. The dark side of diversity (and two stories of diversity\ninitiatives gone wrong) In addition to mock interviews, interviewing.io also\nhelps companies source engineering candidates. We know how people perform in\nmock interviews, and that lets us reliably predict whoâll do well in real\ninterviews. We identify the top performers from practice and introduce them to\ncompanies. Weâve been doing it for a while, and our top performers have\nconsistently outperformed candidates from other sources by about 3X. I\npromised in the beginning of this post that Iâd spill some juicy tidbits. Here\ngoes. Years ago, we pitched Facebookâs university recruiting team on using us\nto hire for their intern class. The pitch was that we had thousands of college\nstudents from all over the U.S. who had done a bunch of mock interviews, and\nthat we knew who the top performers were. Many of our students did NOT come\nfrom the handful of top-tier schools that Meta typically recruited from. If\nthey were to recruit through us, theyâd have to do way fewer interviews (we\nhad already taken care of technical vetting), and theyâd get a much more\ndiverse slice of the population. Our only process request was that they\nconduct interviews with students anonymously, on our platform, so they\nwouldnât be biased against top-performing students who didnât go to top\nschools. We didnât get the gig. The main bit of pushback from Facebook was\nthat anonymity violated guidelines set by the OFCCP. The OFCCP (Office of\nFederal Contract Compliance Programs) is part of the U.S. Department of Labor\nand is âresponsible for ensuring that employers doing business with the\nFederal government comply with the laws and regulations requiring\nnondiscrimination.â One of the many things that the OFCCP requires you to\ntrack, if you do business with the federal government, is the race and gender\nof your applicants. We couldnât agree to this. While the requirement makes\nsense on the surface â as they say, you canât fix what you canât measure â in\nthis case, it was a Kafkaesque roadblock to achieving the very thing that the\nOFCCP is fighting for: reducing discrimination.5 More broadly, you canât take\nan outcomes-based approach unless your inputs are homogenous and the playing\nfield is level. The biggest advocates of DEI will argue, correctly, that the\nplaying field is not level. Given that itâs not level, focusing exclusively on\noutcomes creates all manners of perverse incentives â the dark side of\ndiversity is the logical conclusion of an outcomes-based approach:\nincentivizing the selection of candidates based on race and gender and\nultimately discriminating against non-URM candidates. Weâve worked with\ncompanies of all sizes, from seed stage startups to FAANG, and at one point or\nanother, weâve worked with most FAANGs and FAANG-adjacent companies. Weâve\nseen it all. In 2022, at the height of diversity fever, one well-known FAANG-\nadjacent customer approached us with a specific request. Letâs call them\nAcmeCorp (name obviously changed; theyâre a household name, but I donât want\nto rake them over the coals publicly because they were a great partner to us\nuntil this thing happened). AcmeCorpâs recruiting team wanted us to do some\npre-filtering on the candidates we introduced to them. We already do some pre-\nfiltering: location, years of experience, visa status, and obviously\nhistorical performance in mock interviews. Only the top few percent of our\ncandidates get to talk to employers. But on our platform, everything is\ncandidate driven. We donât have a searchable candidate database, and we donât\nshare candidate data with companies. Rather, we list the companies who hire\nthrough us, and our top-performing users can connect with them. Over our\nlifetime, plenty of companies have approached us asking if they could get\naccess to just top-performing women and people of color on our platform. It\nmakes sense. Recruiters are given marching orders to find more âdiverseâ\ncandidates, and this is the result. And itâs a convenient way to pass on\nliability. Now, instead of their sourcers having to filter out candidates who\narenât âdiverseâ, we have to do it. Of course, weâve always denied these\nrequests. Weâre not a âdiversityâ platform, and we canât imagine a world where\nweâd block what jobs and employers our users could see based on their race and\ngender (information we donât collect systematically in the first place).6 Even\nthough, on their face, these requests werenât really OK, we got so many of\nthem that, over time, we got desensitized and would joke internally about how\nyet another company wanted a binder full of women. However, AcmeCorpâs request\nwas more egregious than the rest because it gave us visibility into how many\ncompanies were behaving internally when faced with diversity goals. It was\ncommon knowledge that many companies were doing diversity-specific sourcing,\nso we werenât shocked when we were asked to help with that. What wasnât common\nknowledge is that companies were blatantly rejecting qualified applicants who\ndidnât meet their diversity criteria. AcmeCorp had a fairly complex candidate\nfiltering process in place, and they wanted us to run that same process on any\nof our top performers who expressed interest in working there. Hereâs how\ntheir process worked. Note that AcmeCorp, like many companies, pays\ndifferently depending on where you live. List a remote job thatâs hiring all\nover the United States. When candidates apply from high cost of living areas\n(e.g., the SF Bay Area, NYC), only consider women and people of color. Reject\nthe rest. When candidates apply from lower cost of living areas (e.g., small\ntowns in the Midwest), consider everyone. In other words, a white man from San\nFrancisco would have no shot at getting an interview at this company â he\nwould be auto-rejected and left to wonder what was wrong with his resume. Why\ndid this company take this approach? They were willing to pay top dollar for\nwomen and people of color but not for other types of engineers, and they hid\nbehind geography to do it. Because of the geographical element, itâs not as\nblatant as outright rejecting people based on race and gender, but for all\nintents and purposes, itâs the same. Outside of this practice being\nquestionably legal at best, itâs also unethical. You can argue that companies\nshould be able to do outreach to any demographic groups that they want. Itâs\nmuch harder to argue that itâs ok to reject applicants based on their race and\ngender. We terminated the relationship.7 Unfortunately, when you tie the\nsuccess of your recruiting program to gender and race outcomes, these are the\nbehaviors that inevitably arise. For all its flaws, though, the DEI movement,\ncoupled with increasing demand for engineers, propelled companies to make deep\nchanges to their hiring processes. For every DEI horror story, there is an\nequal and opposing story about a Head of Talent or investor engineering leader\nwho persuaded their eng hiring managers to stop looking just at students from\nMIT and Stanford, to change their interview processes, to blind resumes, and\nto do a bunch of other useful things that benefitted every non-traditional\ncandidate. But, back to whatâs happening today. You donât just get to say\nâmeritocracyâ and be done with it. In practice, meritocratic hiring doesnât\nreally exist, and what companies call meritocracy is anything but. The false\npromise of meritocracy For most sane people, the concept of meritocracy is\nhard to argue against. Shouldnât the most qualified person get the job?\nUnfortunately, because the definition of âqualifiedâ is murky, meritocracy\noften becomes a justification for over-indexing on pedigree: where people went\nto school or where they worked previously. âWe just hire the bestâ often means\nâwe hire people from FAANG, MIT, and Stanford.â Unfortunately, those are\nproxies for ability, not actual measures of it. Our research has consistently\nshown that where people go to school isnât very predictive of what they can\ndo. Where theyâve worked is somewhat predictive, but itâs not the most\nimportant thing.8 Despite that, those are the main criteria that companies use\nwhen they decide whom to interview, and because thatâs the first step in a\nhiring funnel, itâs the one that gets applied to the most candidates. Any\nattempts at making the process meritocratic after the resume review (e.g.,\ntraining interviewers, doing anonymous interviews) are bound to be less\nimpactful because they affect 10X-100X fewer candidates. Fortunately, for all\ntheir flaws, at least technical interviews do focus on ability â once you get\nin the door, itâs not about how you look on paper but about how you perform.\nAs a result, all other things being equal, how you decide which candidates to\nlet into your process is the litmus test for whether your process is truly\nmeritocratic or not. Unfortunately, the pedigree-based approach isnât\nparticularly meritocratic. In our 9 years, weâve diligently tracked the\nbackgrounds of our candidates, and as I mentioned in the intro to this post,\nabout 40% of our top performers donât look good on paper (but do as well as or\noutperform their pedigreed counterparts in interviews). One of our users got\nrejected from a top-tier social network company three timesâ¦ THREE TIMESâ¦\nbased on his resume before he got hired there through us, after doing very\nwell in an anonymous interview. Iâve shared a few diversity horror stories,\nbut the sad reality is that (faux) meritocracy horror stories like this one\nhappen every day. I wish I had a real meritocracy horror story to share, but\nas far as I know, eng hiring has never been truly meritocratic. If you know\notherwise, please do share. Our data also shows that pedigree has very little\nbearing on interview performance. Where people went to school has no bearing\non their interview performance, and though where people have worked does carry\nsome signal, itâs not nearly as important as other traits â in past research,\nweâve found that not having typos/grammatical errors on your resume is a much\nstronger signal than whether theyâve worked at a top company, as is whether\ntheyâve done a lot of autodidactic work.8 Moreover, in two separate studies\ncompleted a decade apart, where recruiters had to judge resumes and try to\npick out the strong candidates, we consistently saw that recruiters are only\nas accurate as a coin flip and largely disagree with each other about what a\ngood candidate looks like.9 Thatâs why posts like the one from Scale AI get my\nhackles up. You donât get to say that youâre meritocratic if youâre just\nscanning resumes for top brands. Thatâs not meritocracy. Itâs co-opting a hot-\nbutton word for clout. And itâs not just Scale AI. This is how tech companies\ndefine being meritocratic and hiring the best. Itâs just that not all of them\nare so self-congratulatory about it. So how do you ensure that your hiring is\nactually meritocratic? How to actually âdoâ meritocracy, if you mean it In a\nrecent study, we looked at how recruiters read resumes and how good they are\nat finding talent. As you saw above, we learned that recruiters are barely\nbetter than a coin flip. Another thing we looked at in the same study was what\nmade them pick certain resumes over others. The two traits that were the most\npredictive of whether a recruiter would pick you? First, whether you had top\nbrands on your resume, and second, whether you were Black or Hispanic. This is\nhow recruiters work today. If you donât intervene and make changes, todayâs\ncompeting approaches will both be implemented by your team simultaneously,\nresulting in a farcical chimera of fake meritocracy and outcomes-based\ndiversity goals. So what can you actually do, if you, in good faith, want to\nrun a meritocratic hiring process? (By the way, if you believe that talent is\ndistributed uniformly, by definition, this approach will entail being open to\ntalent from traditionally underrepresented backgrounds.) First, you have to\nmove away from identity politics and expand the definition of\nâunderrepresented.â You have to believe, in your heart of hearts, that great\ntalent can come from anywhere and must stop focusing arbitrarily on one\nmarginalized group at the expense of another. Basically, you have to be open\nto any candidate whoâs good, regardless of how they look on paper, without\nprioritizing race and gender. This certainly includes race and gender, but it\nalso includes socioeconomic status, educational background (or lack thereof),\nand any number of other traits that have nothing to do with someoneâs ability\nto do the job. Hell, why not just stop worrying about candidate backgrounds\nand have a process that welcomes all and surfaces the best? Following this\npath will logically require moving away from race and gender outcomes-based\ngoals. Then, you have to accept and internalize that your current method of\ndeciding who gets to interview, which is very likely focused on brands (where\npeople have worked or where theyâve gone to school), is not only NOT\nmeritocratic but also ineffective. We talked above about how pedigree is very\nlimited in its ability to predict performance. If you accept both of these\npremises â expanding the definition of âunderrepresentedâ and moving away from\nfocusing on brands â the hard work begins. Companies have used resumes (and\nbrands by extension) since time immemorial because theyâre easy, and as you\nsaw in our data above, they do carry some signal. But even though they carry a\nlittle signal, recruiters are not very good at extracting it. Hereâs what you\nshould do to pragmatically and realistically revamp your hiring process to be\nmore meritocratic. I challenge Scale AI and all the leaders on the\nâmeritocracy boardâ to publicly commit to at least two of these â or to name\nthe specific, actionable approaches they plan to take. Change how you read\nresumes. 10 Give candidates the option of submitting some writing about a past\nproject theyâre proud of. Give candidates the option of doing a take-home or\nan asynchronous assessment. Put enough work into those assignments such that\nyouâll trust their outcome enough to not have to look at a resume. [EXTRA\nCREDIT] Invest what you can in closing the gaps. Change how you read resumes\nFirst, SLOW DOWN. In the study I mentioned above, we saw that recruiters take\na median of 31 seconds to judge a resume, but spending just 15 extra seconds\nreading a resume could improve your accuracy by 34%. Our second piece of\nadvice is this. More than 20 years ago, Freada Kapor Klein from Kapor Capital\ncoined the term âdistance traveled,â referring to what someone accomplished,\nin the context of where they started. For instance, Kapor Klein recommends\nthat, in their admissions processes, universities should consider not just the\nnumber of AP tests a candidate has passed but the number of AP tests taken\ndivided by the total number offered at their high school. For example, if an\napplicant took 5 AP tests and their school offered 27, that paints a very\ndifferent picture from another applicant who also took 5 AP tests when thatâs\nthe total number offered at their school. Kapor Capital uses distance traveled\nas one of their metrics for determining which entrepreneurs to fund. One can\neasily apply this concept to hiring as well. The data shows that slowing down\nis important, and as part of slowing down, when you read a resume, try to\nevaluate candidatesâ achievements, not in a vacuum, but in the context of\nwhere they came from. Think about the denominator. But donât think for a\nmoment that we recommend that you lower the bar â absolutely not. On\ninterviewing.io, we regularly see nontraditional candidates objectively\noutperforming their FAANG counterparts. Give candidates the option of\nsubmitting some writing about a past project theyâre proud of My friends at\nKeepSafe and I ran an experiment about a decade ago where we tried replacing\nresumes with a writing sample about a past project. It was a huge success.\nEven today, when we hire at interviewing.io, we use this approach. We mostly\nhire off of our own platform (we just list our own open positions alongside\nothers). However, not all of our users have done enough mock interviews to\nhave a rating, and for those users, we have a different flow where we ask them\nto write about a past project. Boy, are the results telling. Hereâs what our\napplication form looks like. Steal it if you want. Give candidates the option\nof doing a take-home or an asynchronous assessment Take-homes and asynchronous\nassessments are not well-loved by candidates, primarily because of value\nasymmetry. They ask a lot of the candidate but nothing of the company, and\nitâs not uncommon for a candidate to have to do hours of work and then never\nhear anything back. To be clear, this is NOT the setup weâre advocating.\nHereâs what weâd advise instead: Give candidates the option of doing a take-\nhome/assessment that takes no more than 1 hour, instead of submitting their\nresume. When we say option, we mean that the candidate can decide whether they\nwant to do the take-home or not. If they choose not to, then youâll read their\nresume, hopefully using our suggestions above. If they choose to complete the\ntake-home, then you forgo their resume and make your go/no-go decision based\nentirely on the results of the take-home. If you choose this route, itâs\ncritical to come up with an assessment whose results you trust. Many companies\nuse a take-home in addition to getting the resume and will still not move\nforward with candidates who look good on paper. Thatâs not meritocratic. Take\nthe time you need to come up with a question thatâs hard to cheat on and that\ngets you the signal you need. Yes, coming up with a good assessment takes\nwork. But no one said that making your hiring process meritocratic was easy.\n[EXTRA CREDIT] Invest what you can in closing the gaps This advice probably\napplies more to big companies than smaller ones, because bigger ones have more\nresources to effect change. Regardless, if you believe in meritocracy, then\nyou understand that a true meritocracy is not possible without a level playing\nfield for your candidates. One of the best things about the DEI movement is\nthat itâs made us aware how unlevel the playing field really is. Whether you\nsubscribe to DEI or not, this is probably not a controversial statement, and\nif you want to see true, meritocratic hiring, you have some obligation to help\npromote equality of opportunity. Where to begin? Although I expect that itâs\nnot level in many places, and there are plenty of opportunities to effect\nchange, starting with elementary education11, I'll talk about the inequality\nIâve observed firsthand repeatedly over the last decade: the technical\ninterview practice gap. How much you practice is the biggest predictive factor\nof interview performance â not seniority, not gender, and not a CS degree. And\nso is socialization. After all, if youâre around people going through the same\nthing, like at a top-tier CS school, rather than beating yourself up after a\ndisappointing interview, youâll start to internalize that technical\ninterviewing is flawed and that the outcomes are sometimes unpredictable.\nFortunately, there are interventions one can make to close these gaps, and the\nsimplest is to provide practice and community for people who donât have access\nto them. Reach out to us about this, find a non-profit that helps people\npractice, donate to your favorite university if they have a good practice\nprogram, or any number of other things. Ultimately, which gap you choose to\nhelp close and how you choose to do it is up to you. But if your company has\nthe means, itâs your responsibility to invest in gap-closing measures. You\ndonât have to donate money. You can offer mock interviews to your candidates\nbefore their real interviews. You can start an apprenticeship program. You can\nencourage your engineers to do some tutoring. However you approach it, though,\nyou canât talk about meritocracy with a straight face and not do something to\nlevel the playing field. Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/i-love-meritocracy-but-all-the-recent-anti-dei-rhetoric-is-bad",
      "author": "",
      "user_id": ""
    },
    {
      "title": "How to get in the door at top companies: a data-driven guide for software engineers. Part 1.",
      "content": "about which channels are most effective for getting into the door at great\ncompanies and why. In part 2, we get very tactical and tell you exactly what\nto say and do to get responses. interviewing.io is an anonymous mock interview\nplatform â we help engineers prepare for technical interviews by pairing them\nwith senior FAANG and FAANG-adjacent engineers for mock interviews and\nfeedback. In this market, many of our users are struggling with getting in the\ndoor at companies, so we ran a survey to see whatâs worked well for our users\nand what hasnât, in todayâs difficult climate. In our survey, we gave people\nthe following channels for getting into companies and asked them which were\nthe most and least effective: In-house recruiters contact you Apply online\nWarm referrals Cold referrals Cold outreach to hiring managers Cold outreach\nto recruiters Agency recruiters contact you We also asked them which types of\ncompanies they got responses from: FAANG FAANG-adjacent (e.g., Stripe,\nDropbox, OpenAI, Uber) Large startups Small startups We got ~500 responses.\nAmong survey respondents, which channels were most effective was largely\nconsistent, regardless of company type, but there were some twists depending\non who the candidates were. More on that in a bit. Below are the channels,\nranked by effectiveness.1 When more people found a channel effective than\nineffective, it ended up in the first list. When more people found a channel\nto be ineffective than effective, it ended up on the second list. Recruiting\nchannels that our users found to be effective (ranked from most to least\neffective): Warm referrals In-house recruiters contact you Apply online Cold\noutreach to hiring managers Recruiting channels that our users found to be\nineffective (ranked from least to most ineffective): Cold outreach to\nrecruiters Cold referrals (referrals from people you donât know) Agency\nrecruiters contact you This data came primarily from surveying experienced\nengineers (4+ years), rather than juniors (we donât have that many juniors on\nour platform; average years of experience is 8). If youâre a junior engineer\nin this market, you already know youâre in for a tough time, and weâd advise\nyou to take your destiny into your own hands as much as possible by reaching\nout directly to hiring managers (the same advice we give many of our more\nexperienced users). More on that later in the post. Interestingly, these\nresults were quite consistent between company types. In other words, channels\nthat worked well for FAANGs tended to work well for startups and vice versa.\nOverall, the most useful channels were in-house recruiters (when they reached\nout to you) and warm referrals. Unfortunately, both of these channels are\nsomewhat out of your control. You have very little control over whether\ninternal recruiters reach out to you. There are some things you can do to\nincrease the chances, but theyâre all tied up in your work history and\nidentity, neither of which you can easily change. Weâll talk more about that\nlater on. Warm referrals (i.e., referrals from people you know), on the other\nhand, are very useful and are a bit more in your control, but they still\ndepend on the quality of your network. Below is a diagram comparing the\nutility of all the channels to how much control you have over them. You might\nwonder why we speculatively singled out cold outreach to hiring managers as\nsomething that can be done right, versus the other channels. In our\nexperience, that channel is both misused and underutilized and is the best bet\nfor many candidates, provided they do it correctly. In our next post, weâll\ntell you exactly what to do and what to say when you reach out to hiring\nmanagers â especially if you come from a non-traditional background and arenât\ngetting a lot of recruiter outreach/donât have the network to get warm\nreferrals, reaching out to hiring managers is your absolute best bet. Now\nletâs look at each channel in detail. In-house recruiters contact you This\nchannel is one of the two where you have the least amount of control (the\nother is agency recruiters contacting you, though that one is way less\nuseful). So, how much control do you have over this channel? One bit of\nanalysis we did on our survey data was to try to find patterns in the\nbackground of people who find in-house recruiters particularly useful. Not too\nsurprisingly, some patterns did emerge. In-house recruiters are most likely to\ncontact you if: You look good on paper, i.e., you have top-tier companies\nand/or schools on your resume (in our experience, companies matter more) You\nbelong to a group thatâs been traditionally underrepresented in tech (i.e.,\nyouâre a woman or a person of color) To some extent, though less than the two\nbullets above, if you have niche skills (e.g., ML engineering) These results\narenât unique to just this survey. We recently did a study where we asked a\nbunch of recruiters to look at resumes and tell us which candidates theyâd\nwant to interview. While the intent of the study was to see if recruiters are\ngood at identifying talent (spoiler: they were barely better than a coin\nflip), we learned some other interesting things, including what recruiters\nactually look for when they read a resume. The two most sought-after resume\ntraits were: 1) experience at a top-tier tech company (FAANG or FAANG-\nadjacent) and 2) URM (underrepresented minority) status (in tech, this means\nbeing Black or Hispanic). This mirrored what we saw in our user survey when we\nlooked at commonalities among candidates who got value from in-house\nrecruiters. So how do you use this information to your advantage? You\nobviously canât magic FAANG/FAANG-adjacent experience or URM status out of\nthin air2, but if you do have either, our pragmatic advice is to highlight it\nand make it really easy for recruiters to spot. Of course, whether you want to\nlead with URM status is a personal decision. Weâve heard differing opinions on\nthis and are not here to judge. All we can do is share the data â do with it\nwhat you will. So, how do you make sure that, say, your FAANG experience\nstands out to recruiters? Take a look at the before and after screenshots of\nthe resume below3. This resume belongs to one of our users who was kind enough\nto let us share it. He actually has two of the three things that recruiters\nlook for: FAANG experience and a niche title (ML engineer). But both are\nburied! And the section that gets the most attention is wasted on\nundergraduate awards. Before As you can see, he spent almost 3 years at Apple,\nbut a recruiter skimming his resume might not notice that because it was a\nwhile ago. Instead, he showcases an undergrad award and some\ntechnologies/languages that he knows. Neither of those is nearly as useful to\nrecruiters as FAANG experience. His current title is also ML engineer, and one\nat the Principal level at that. But it wasnât always: He went from back-end to\nSRE to a little bit of everything to ML, and because of that, itâs possible a\nrecruiter would miss it as well. We edited this candidateâs resume to put all\nthe things recruiters look for at the very top of the resume and moved the\nbuzzword soup to the bottom. This candidate is obviously well-positioned\nbecause he has FAANG experience, several top schools, and niche skills â but\nbefore, many recruiters didnât spot them. After he made these changes, the\nnumber of interviews he got increased by 8X. Apply online If youâve ever\napplied to jobs online, then you know itâs kind of like screaming into a black\nhole. Though, according to our survey, some candidates (specifically people\napplying to FAANG/FAANG-adjacent companies and small startups) get some value\nout of this channel, itâs still a numbers game. And for large startups, itâs a\nlosing proposition. According to recruiting tool Gem, applicants that come\nfrom recruiter outreach (called âoutboundâ in recruiter lingo) are 6 - 10X\nmore likely to get hired than applicants who apply online (called âinboundâ).\nAs Lyft recruiting manager Nate Wylie put it: Our dataâ¦ showed higher pass-\nthrough rates for candidates [we reached out to] at each stage of the\ninterview process vs. applicants via the careers page. Itâs not that we want\nto ignore applicants; itâs just that historically we donât get what weâre\nlooking for â and with speed â through that channel. Having been a recruiter\nmyself, I can confirm that many companies do indeed ignore their online\ncareers page. Many years ago, when I first joined the recruiting team at a\ntop-tier startup, I spent my first few days going through the resumes of\npeople who had applied online. I found a treasure trove of candidates,\nincluding very experienced applicants from top-tier companies.4 But no one had\nseen these applicants because no one had been monitoring inbound activity for\nmonths! The silver lining here is that when you donât hear back from a company\n(or even when you get an automatic rejection email wishing you \"the best in\nyour future endeavors\"), itâs not because a human looked at your resume and\nmade a deliberate, thoughtful decision about you. Itâs tempting to think that\nway because it plays so well into our insecurities. The reality is that a\nhuman probably never saw your resume in the first place. So why do people\napply online, despite knowing in their gut that itâs not an effective\nstrategy? Simply put, itâs predictable and easy. You get into a routine, you\nupload your resume, you connect your LinkedIn, and you can knock out hundreds\nof applications in a matter of hours. The other encouraging thing about this\nchannel is that, when we analyzed specifically which types of candidates had\nsuccess with it, we couldnât find any patterns â the channel worked equally\nwell (poorly?) for people who looked good on paper vs. not, and there was no\npreferential treatment for traditionally underrepresented groups in tech\n(e.g., women and people of color). TL;DR Applying online doesnât hurtâ¦\nprovided that you donât take rejection personally. If you do, itâll wear you\ndown over time. Warm referrals Warm referrals are, of course, excellent. That\nis, assuming it's a real referral â someone who can actually vouch for you,\nand ideally your work. Per capita, referrals are most companiesâ best source\nof candidates, and they were a great channel for our users across all company\ntypes (they were the best channel for FAANGs/FAANG-adjacents, as well as large\nstartups, and second best for small startups, behind in-house recruiters\nreaching out). If you have the network, you should absolutely use it. Of\ncourse, itâs unlikely that youâll have meaningful connections at every company\nyou want to work at. What do you do then? Cold referrals Should you ask people\nyou don't know to refer you? Our survey data says probably not. Cold referrals\nwere net negative for both FAANG and small startups and neutral for large\nstartups. Years ago, trying to collect cold referrals was a decent strategy.\nYou could track down someone at the company and ask them to toss your\nproverbial hat into the ring Engineers were often happy to refer someone â\neven someone they didn't know â either to be kind, to avoid the awkwardness of\ndeclining, or to collect the potential referral bonus. They couldn't vouch for\nyou, but the referral would ensure that a human looked at your resume. This\nbecame so common that Blind actually spun out an entire referral marketplace\ncalled Rooftop Slushie (the link is to some press because the actual site is\nnow defunct), where applicants would pay a small sum for a referral. Then,\ncompanies wised up and realized that these referrals weren't all that\ndifferent from normal in-bound applicants. So why treat them differently? Many\ncompanies nowadays separate referrals into \"true referrals\" and \"leads.\" Itâs\ngreat for maintaining the delicate dance of social dynamics, but itâs\ncompletely useless for getting hired â dropping someoneâs resume into the\nâleadsâ pile is basically the same as throwing it into the inbound black hole.\nGiven that cold referrals arenât zero effort, our advice is to expend that\nenergy elsewhere. More on that shortly. Agency recruiters Agency recruiters\nwere the worst channel overall, according to our survey, and were net negative\nfor all company types. FAANGs and FAANG-adjacent companies tend to rely less\non agencies than startups, and when they do, itâs to fill some very specific\nneed (rather than âHey we need more SWEsâ), so itâs not surprising that our\nusers didnât get much value from this channel when applying to FAANGs. While\nboth large and small startups use agencies liberally, clearly the value to\ncandidates is limited.5 Out of all of our survey respondents, only a handful\nof our users said that agencies were useful to them, and of those who\nmentioned agencies, the majority said that they were the worst channel. We\nwonât belabor the point, but itâs probably not in your best interest to spend\nmuch time on working with agency recruiters. It has opportunity cost and not\nmuch upside. And you can routinely get screwed in salary negotiations when you\nwork with an agency recruiter, if you even get that far. Cold outreach (to\nhiring managers vs. recruiters) Not all cold outreach is created equal, for\ntwo reasons. First, thereâs your audience: hiring managers vs. recruiters. And\nthen thereâs the quality of the outreach itself. Weâll come back to how to\nwrite the kinds of messages that will get you responses. First, letâs talk\nabout the audience. You can see in our survey results that cold outreach to\nhiring managers was net positive for FAANG/FAANG-adjacent companies and\nneutral for the other company types. Cold outreach to recruiters, on the other\nhand, was net negative for both FAANG/FAANG-adjacents and small startups and\nneutral for large startups. Ignoring the quality of the outreach for a moment,\nwhich we expect is probably comparable for both types, why does this\ndifference exist? If you had to answer the question of whoâs the right person\nto reach out to about jobs, your gut instinct might be to say itâs recruiters.\nAfter all, hiring is officially their job! However, thatâs not strictly true.\nRecruiters are not incentivized to make hires, at least not directly. Just\nlike everyone else, recruitersâ main priority is to keep their jobs. Cold\noutreach to recruiters doesnât work How does a recruiter keep their job?6 By\nbringing in the types of candidates that their manager tasked them with. How\nis that different from hiring? Hiring implies that youâre evaluated on whether\nthe people you bring in actually get hired, but most in-house recruiters\narenât evaluated this wayâ¦ because it takes too long. Instead, recruiters are\nsometimes evaluated on what portion of their candidates get offers or get to\nonsite. However, because of drop-off and latency (getting an offer can still\ntake months), your organization has to be pretty good at tracking. Many are\nnot. As such, many recruiting orgs prefer simpler, faster metrics: Of the\ncandidates you reached out to, how many responded? Of those who responded, how\nmany resulted in a first conversation? The downside of measuring success in a\nsingle part of the funnel is that you donât incentivize people to care about\nwhat happens downstream (that is, how many are hired). This would be like if\nmarketers only paid attention to ad clicks, rather than actual purchases. But\nthatâs how recruiting operates: individuals arenât really incentivized to care\nwhat happens downstream. So, if you are typically just measuring the response\nrates of your reports, as a recruiting manager, you have to set some\nguardrails for the types of candidates that you want your team to reach out\nto. If you donât, theyâll end up just reaching out to people who are likely to\nrespond instead of people who are a good fit for the job. Unfortunately, you\ndonât know who is a good fit for the job. You canât just say, âGo on LinkedIn,\nand find me good engineers.â That doesnât exist. So instead, you come up with\nsome rules that look like this: Senior engineers Juniors and intermediate\nengineers would answer outreach a lot, but they already apply online in\ndroves, so we donât need to pay people to go out and find them. Moreover, we\nhave a whole university department that deals with college hires once a year\nin September. Went to a top school (in the absence of a better filter, this\nworks OK) Worked at a top company There may be a few other items on the list\nif the role requires specific skills (e.g., Android development), but by and\nlarge, thatâs what recruiters are tasked with, and thatâs what theyâre focused\non. It seems counterintuitive, but if youâre either fairly junior (fewer than\n4 years of experience) or you donât have fancy brands and schools on your\nresume, recruiters are not incentivized to help you because you donât meet\ntheir criteria, and theyâre not incentivized to take risks on candidates\nbecause theyâre not getting rewarded when the company makes hires (or punished\nwhen the company doesnât). What does this mean for you? If youâre not the type\nof candidate that recruiters are reaching out to already (senior, well-\npedigreed), they will not help you. With that sad reality in mind, hereâs the\ngood news: there is someone whoâs actually incentivized to make hires and is\nmuch more open-minded: the hiring manager7! Cold outreach to hiring managers\nis effective At this point, you might be skeptical. After all, according to\nthe graph comparing all channels, hiring manager outreach is the worst of the\nbest. Sure, itâs net positive for FAANG/FAANG-adjacent companies, but it lags\nbehind in-house recruiters, warm referrals, and online applications with\nrespect to effectiveness. Hereâs the thing. Hiring manager outreach is the\nchannel with the most untapped potential for effectiveness, while also being\nthe one where you have the most control. Because companies often ignore them,\nonline applications canât come close to the same level of control, and warm\nreferrals have a low ceiling. In-house recruiter outreach is largely out of\nyour control (except for maybe making some limited profile tweaks, as we saw\nabove). Why is this the right channel? Unlike recruiters, hiring managers are\nactually incentivized to make hires and tend to be more open-minded about\ncandidate backgrounds, all because hiring managers are judged on results.\nSpecifically, theyâre judged on how quickly and effectively theyâre able to\nbuild stuff, and are â directly or indirectly â incentivized to grow\nheadcount. For hiring managers, itâs not about the appearance of doing the\nwork. Itâs about the cold, hard reality of whether the work got done. And\nbecause theyâre judged on actually getting stuff done, hiring managers are\nalso much more incentivized than recruiters to take risks. Outside of needing\nmore people to build things, hiring managers are also incentivized to hire for\ntheir teams because the better they are at recruiting and filling headcount,\nthe more likely they are to get promoted. As such, in our minds, when people\nsay that hiring manager outreach hasnât worked for them, itâs because theyâre\nnot doing it right. So, how do you do it? In our next post, weâll get very\npractical about outreach, provide a bunch of examples of good and bad\noutreach, and share two templates that you can steal. Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/how-to-get-in-the-door-at-top-companies-part-1",
      "author": "",
      "user_id": ""
    },
    {
      "title": "Are recruiters better than a coin flip at judging resumes? Here's the data.",
      "content": "first for interviewing.io because itâs about a proper experiment run by a\nreal, live academic research lab. If youâve been reading my work for the past\ndecade, you know that Iâve always been something of an armchair researcher. I\nran some experiments before starting interviewing.io, and since then, my team\nand I have kept it up. One of the experiments I ran before I founded\ninterviewing.io was an attempt to figure out how good recruiters were at\njudging candidate quality based on resumes. I ran it 10 years ago and\ndiscovered that not only was everyone bad at judging resumes (about as\naccurate as flipping a coin), they all disagreed with each other about what a\ngood candidate looked like. Even though these results were shocking at the\ntime, the study had some serious limitations. First, I had no objective\nmeasures for which candidates were actually good. I was working as a recruiter\nat the time, so I knew whom I had been able to place, but thatâs obviously not\nthe be-all and end-all of engineering ability. Second, I had a non-\nrepresentative sample of software engineers. Due to my brand, I had managed to\nattract a lot of excellent, non-traditional candidates â engineers who were\nactually very good but didnât look good on paper. These types of resumes are\nthe hardest for recruiters to judge, and the data was full of them. Finally,\nmy sample size wasnât that big: I ended up with 716 data points in total, only\nabout half of which came from recruiters (the rest came from engineers and\nhiring managers â my original hypothesis was that they might be better at the\ntask, but I was wrongâ¦ everyone was bad at judging resumes). So, now that Iâm\nCEO of interviewing.io, with access to a lot more data, resources, and a team\nof excellent academics at Learning Collider, we decided to run this study\nagain, but with a more rigorous treatment and better conditions, to see if we\ncould replicate the results. This time, we focused just on recruiters, given\nthat theyâre most often the gatekeepers who decide which candidates get an\ninterview. Below are all the details, but hereâs the TL;DR: we reproduced my\nresults from 10 years ago! Our new study showed that recruiters were only a\nbit better than a coin flip at making value judgments, and they still all\ndisagreed with each other about what a good candidate looks like. In this\npiece, we also talk about: How far off recruiters were in their predictions\nand how much they disagreed with each other What recruiters say they look for\nvs. what the data shows they actually look for Why recruiters taking more time\nto parse resumes would lead to better outcomes (median parse time is just 31\nseconds) Whether AI can do a better job at judging resumes (spoiler: yes, it\ncan) The rest of this piece is co-authored by Peter Bergman, Tushar Kundu, and\nKadeem Noray of Learning Collider. The setup In the real world, resumes (or\nLinkedIn profiles) are evaluated by recruiters in minutes â even seconds â and\nthese evaluations are THE thing that determines who gets an interview. But\nwhat do these word walls tell recruiters? How predictive are their evaluations\nof actual interview success? Ultimately, how good are recruiters at judging\nresumes? To answer these questions, we designed a study approximating\ntechnical recruitersâ decisions in the real world. We asked1 76 technical\nrecruiters (both agency and in-house) to review and make judgments about 30\nengineersâ resumes each, just as they would in their current roles. They\nanswered two questions per resume: Would you interview this candidate? 2 (Yes\nor No) (Yes or No) What is the likelihood this candidate will pass the\ntechnical interview (as a percentage)? We ended up with nearly 2,200\nevaluations of over 1,000 resumes. The resumes in this study belonged to\ninterviewing.io users (with their consent) â actual engineers currently on the\njob market. Collaborating on this study with interviewing.io is an ideal\nscenario, precisely because outcome data were available for comparison\npurposes. Each engineer in this study has completed multiple mock interviews\non the platform. Performance in these interviews is quite predictive of\nperformance in real interviews: top performers (roughly the top 5% of users)\non interviewing.io are 3X more likely to pass technical interviews at top-tier\ncompanies than candidates from other sources. Even passing a single interview\non interviewing.io is a strong predictor of outcomes; it's associated with a\n32% increase in the chance of working at a FAANG company post-interview. Once\nwe had recruitersâ evaluations of the resumes, we compared them to how those\nengineers actually performed on interviewing.io: skills scores, feedback from\ninterviewers, and ultimately, whether they passed or failed their mock\ninterviews. Recruitersâ resume judgments are just slightly better than a coin\nflip Question #1: Would you interview this candidate? In aggregate, recruiters\nin the study recommended 62% of candidates for an interview. But how did\nrecruiter evaluations stack up against candidatesâ performance on the\nplatform? We calculated recruiter accuracy by treating each candidateâs first\ninterview (pass/fail) as the truth, and recruitersâ decision to interview as a\nprediction. It turns out that recruiters chose correctly 55% of the time,\nwhich is just slightly better than a coin flip. Question #2: What is the\nlikelihood this candidate will pass the technical interview? Recruiters\npredicted the likelihood that each candidate would pass the technical\ninterview. In most hiring processes, the technical interview follows the\nrecruiter call and determines whether candidates proceed to the onsite. Being\nable to accurately predict which candidates will succeed at this stage is\nimportant and should inform the decision about whether to interview the\ncandidate or not. What we found most surprising is how far their predictions\nwere from the truth: When recruiters predicted the lowest probability of\npassing (0-5%), those candidates actually passed the technical interview with\na 47% probability. When recruiters predicted the highest probability of\npassing (95-100%), those candidates actually passed with a 64% probability.\nBelow is a graph that shows recruiter predictions vs. actual performance. The\nx-axis is the bucketed recruiter rating. In other words, the first point is\nall the candidates that recruiters assigned a 0-5% likelihood of passing. The\ny-axis is the average interviewing.io pass rate for those candidates. The red\ndotted line represents 100% accuracy â in an ideal world, the higher a\nrecruiter's ranking of a candidate, the higher their actual performance would\nbe. The orange line represents reality â as you can see, there isnât much\ncorrespondence between how recruiters predicted candidates would perform and\ntheir actual performance. Recruitersâ predictions below 40% underestimate\nthese candidates by an average of 23 percentage points. Above 60%, theyâre\noverestimating by an average of 20 percentage points. If this was predicting\nstudent performance, recruiters would be off by two full letter grades.\nRecruiters canât agree on what a good candidate looks like Clearly, there is\nlots of noise in resume evaluations. Were recruitersâ noisy judgments at least\nconsistent when reviewing the same resumes? Nearly 500 resumes were evaluated\nby more than one recruiter. Based on a random selection of two evaluations per\nresume, the overall likelihood of two recruiters agreeing to either interview\nor not interview a given candidate was 64%. Since recruiters also guess the\nprobability a candidate will pass the technical interview, we can compare how\ndifferent these guesses are for a given candidate. The average differential\nbetween two randomly selected recruitersâ evaluations of the same resume was\n41 percentage points. So, letâs say one recruiter predicts a 30% probability\nthe candidate would pass; another recruiter evaluating the same resume would\npredict, on average, a 71% probability of passing. To further understand just\nhow prevalent the disagreement is, we looked at the standard deviations for\nacross-candidate evaluations and same-candidate evaluations: 0.34 across\ndifferent candidates 0.32 across the same candidates So, when two recruiters\nare asked to judge the same candidate, their level of disagreement is nearly\nthe same as if they evaluated two completely different candidates. The most\nsought-after resume attributes Despite the noise and variability in the\nstudyâs resume evaluations, there were some characteristics that recruiters\nconsistently favored: experience at a top-tier tech3 company (FAANG or FAANG-\nadjacent) and URM (underrepresented minority) status (in tech, this means\nbeing Black or Hispanic). Most predictive for Question #1 (whether a recruiter\nwould want to interview that candidate) was experience at a top company â\nthese candidates were 35% more likely to be picked. Black or Hispanic\ncandidates are also associated with an increased likelihood a recruiter would\ninterview a candidate â by 21%.4 With Question #2 (how likely the candidate\nwas to pass a technical interview), having a top company on your resume is\nassociated with a 21% increase in the likelihood that recruiters believe the\ncandidate will pass the interview. Compared to the actual pass rates,\nrecruitersâ predictions of FAANG candidates are generally accurate (average 4\npercentage point overestimate).5 Unlike the presence of a top company, URM\nstatus didn't appear to influence recruiter decisions here. How do recruitersâ\nstated reasons for rejecting candidates line up with actual rejection reasons?\nSo, we know what recruiters tend to favor, whether theyâd admit to it or not:\n1) FAANG/FAANG-adjacent experience and 2) URM status. But whatâs even more\ninteresting than why a recruiter would say yes is why they would say no. When\nwe asked recruiters to judge a resume, we also asked them WHY they made that\ndecision.6 Below are recruitersâ stated reasons for rejecting candidates. As\nyou can see, âmissing skillâ is the main reason by far, with âno top firmâ a\ndistant third. So, then, we wonderedâ¦ How do recruitersâ stated reasons for\nrejecting candidates line up with reality? To figure that out, we analyzed the\nresumes that ended up in the rejected pile and looked at common traits. Below\nis a graph of actual rejection reasons, based on our analysis. The main\nrejection reason isnât âmissing skillâ â itâs âno top firm.â This is followed,\nsomewhat surprisingly, but much less reliably (note the huge error bars), by\nhaving an MBA. âNo top schoolâ and having a Masterâs degree come in at third\nand fourth. Note that these top four rejection reasons are all based on a\ncandidateâs background, NOT their skill set. The y-axis is the coefficient\nfrom regressing rejection on that variable. So, a coefficient of Y for a given\ntrait means that trait is associated with a Y*100% percentage point increase\nin the likelihood of being rejected. Slowing down is associated with better\ndecisions Another key piece of this study is time. In hiring settings,\nrecruiters make decisions quickly. Moving stacks of candidates through the\nfunnel gives little room to second-guess or even wait before determining\nwhether or not to give a candidate the opportunity to interview. In our study,\nthe median time spent on resume evaluations was just 31 seconds. Broken down\nfurther by Question #1 â whether or not the recruiter would interview them â\nthe median time spent was: 25 seconds for those advanced to a technical\ninterview 44 seconds for those placed in the reject pile Given the weight\nplaced on single variables (e.g., experience at a top firm), how quickly\nrecruiters make judgments isnât surprising. But might they be more accurate if\nthey slowed down? It turns out that spending more time on resume evaluations,\nnotably >45 seconds, is associated with more accurate predictions â just\nspending 15 more seconds appears to increase accuracy by 34%.7 It could be\nthat encouraging recruiters to slow down might result in more accurate resume\nscreening. Can AI do better? As a gaggle of technologists and data geeks, we\ntested whether algorithms could quiet the noise and inconsistencies in\nrecruitersâ predictions. We trained two local, off-the-rack machine-learning\nmodels.8 Just like human recruiters, the models were trained to predict which\ncandidates would pass technical interviews. The training dataset was drawn\nfrom interviewing.io and included anonymized resume data (years of experience,\nwhether they had worked at a top firm, and whether they had attended a top 10\nschool for either grad or undergrad), candidatesâ race and gender, and\ninterview outcomes.9 Despite the very limited types of data we input into both\nmodels, when presented with out-of-sample candidate profiles, both models made\npredictions more accurately than human recruiters. Random Forest was somewhat\nmore accurate than recruiters when predicting lower performing candidates.\nXGBoost, however, was more accurate across the board than both the Random\nForest model AND recruiters. Where does this leave us? In this section, when\nwe say âwe,â we are speaking as interviewing.io, not as the researchers\ninvolved in this study. Just FYI. Advice for candidates At interviewing.io, we\nroutinely get requests from our users to add resume review to our list of\nofferings. So far, we have declined to build it. Why? Because we suspected\nthat recruiters, regardless of what they say publicly, primarily hunt for name\nbrands on your resume. Therefore, highlighting your skills or acquiring new\nskills is unlikely to make a big difference in your outcomes. We are sad to\nsee the numbers back up our intuition that it mostly is about brands.10 As\nsuch, hereâs an actionable piece of advice: maintain a healthy skepticism when\nrecruiters advise you to grow your skill set. Acquiring new skills will very\nlikely make you a better engineer. But it will very likely NOT increase your\nmarketability. If enhancing your skill set wonât help, what can you do to get\nin front of companies? Weâre in the midst of a brutal market, the likes of\nwhich we havenât seen since the dot-com crash in 2000. According to anecdotes\nshared in our Discord community, even engineering managers from FAANGs are\ngetting something like a 10% response rate when they apply to companies\nonline. If thatâs true, what chance do the rest of us have? We strongly\nencourage anyone looking for work in this market, especially if you come from\na non-traditional background, to stop spending energy on applying online, full\nstop. Instead, reach out to hiring managers. The numbers will be on your side\nthere, as relatively few candidates are targeting hiring managers directly. We\nplan to write a full blog post on how to do this kind of outreach well, but\nthis CliffsNotes version will get you started: Get a LinkedIn Sales Navigator\naccount Make a target list of hiring managers at the companies youâre\ninterested in Figure out their emails (you can use a tool like RocketReach),\nand send them something short and personalized. Do not use LinkedIn. The same\nway that you donât live in LinkedIn, eng managers donât either. Talk about the\nmost impressive thing youâve built. Ask them about their work, if you can find\na blog post theyâve written or a project theyâve worked on publicly. Tie those\ntwo things together, and youâll see a much higher response rate. Writing these\npersonalized emails takes time, of course, but in this market, itâs what you\nneed to do to stand out. Advice for recruiters We know that recruiting is a\ntough job, especially in the current climate, where there are more applicants\nthan ever and fewer recruiters to parse through them. So, it rationally makes\nsense to us that a recruiter would spend no more than 30 seconds per resume\nand focus primarily on looking for top brands. We hope, though, that this\npiece may have given a measure of pause about your approach, and weâd like to\nleave you with two actionable pieces of advice. First, if you do nothing else,\nplease slow down. As you saw above, taking just 15 extra seconds to read a\nresume could improve your accuracy by 34%.11 Our second piece of advice is\nthis. Freada Kapor Klein from Kapor Capital coined the term âdistance\ntraveledâ more than two decades ago. It refers to what someone accomplished,\nin the context of where they started. For instance, Kapor Klein recommends\nthat, in their admissions processes, universities should consider not just the\nnumber of AP tests a candidate has passed but the number of AP tests divided\nby the total number offered at their high school. For example, if an applicant\ntook 5 AP tests and their school offered 27, that paints a very different\npicture from another applicant who also took 5 AP tests when thatâs the total\nnumber offered at their school. Kapor Capital uses distance traveled as one of\ntheir metrics for determining which entrepreneurs to fund. One can easily\napply this concept to hiring as well. Take a look at the resume below. \"John\"\n(name has been changed; scrubbed resume shared with permission) studied\nchemical engineering and worked his way into software engineering by starting\nas a service engineer focused on pen testing. In the meantime, he completed a\nbootcamp, attended the Bradfield School of Computer Science (a school\ndedicated to teaching computer science at a depth beyond what many university\nprograms, and certainly most bootcamps, offer), and ended up with a senior\ntitle in just three years. John was consistently rated poorly by recruiters\nbut is one of the top performers on interviewing.io. It takes just a bit more\ntime, so please spend a little longer reading resumes, and evaluate\ncandidatesâ achievements in the context of where they came from. Think about\nthe denominator. But donât think for a moment that we recommend that you lower\nthe bar â absolutely not. On interviewing.io, we regularly see candidates like\nJohn objectively outperforming their FAANG counterparts. What this means for\nour industry The last time I did this research, I wrote about how being bad at\njudging resumes isnât anything to be ashamed about and that comes down to the\nresume itself being a low-signal and not-very-useful document. I held that\nsame opinion for the last decade (and even wrote a recent post about how AI\ncanât do recruiting)â¦ right up until we ran this study and successfully built\ntwo ML models that outperformed recruiters. So, I stand corrected. As you saw\nabove, both models were limited â they were looking at the same types of\nfeatures that recruiters do when they quickly scan a resume, certainly fewer\nfeatures than recruiters have access to. But, despite that, the AI models\nstill outperformed humans. What happens then, if you can build a model that\nbehaves like a recruiter who really slows down and reads everything? These\nresults make me believe that resumes do carry some signal, and you can uncover\nit if you carefully read what people write about their jobs and themselves and\nalso analyze how they write it. Unfortunately, this takes more time and effort\nto uncover than most human recruiters are able to devote. And, in retrospect,\nthatâs a good task for AI. Though we havenât built a model like that for this\npost, Iâm optimistic that we may be able to do it in the future. As I said in\nthe AI piece I linked above, in order for AI to do useful recruiting work,\nrather than just perpetuating the biases that human recruiters hold, it needs\na data set that contains some objective measure of performance. Most\nrecruiting AI models today do one of three things: glorified keyword matching,\ntraining on what recruiters prefer (the outcome is whether a recruiter would\nwant to talk to the candidate, NOT whether the candidate is good), or live on\ntop of existing tools like ChatGPT (which we recently showed doesnât perform\nvery well and is biased against non-traditional candidates). These three\napproaches just result in the wrong thing being done, faster. I hope that, in\nthe not too distant future, we can use AI to make less-biased decisions, using\nmeaningful performance data. And I hope that this type of AI solution can get\nadoption among the recruiting community. Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/are-recruiters-better-than-a-coin-flip-at-judging-resumes",
      "author": "",
      "user_id": ""
    },
    {
      "title": "How to get in the door at top companies: cold outreach to hiring managers. Part 2 of 2.",
      "content": "channels are most effective for getting in the door and did an analysis of\nthose channels along two axes: effectiveness and how much control you actually\nhave. Hereâs a quick summary. In the quadrant above, you can see that while\ngetting contacted by an in-house recruiter is very effective, whether you get\ncontacted or not is largely out of your hands. The channel that maximizes both\neffectiveness and control is cold outreach to hiring managers (not\nrecruiters!) âdone rightâ. What does âdone rightâ mean? Thatâs what weâll talk\nabout in this post (part 2 of 2). Most people do this type of outreach\nincorrectly. Here, weâll get very tactical and tell you exactly what to say\nand do to reach out to hiring managers at the companies youâre interested in\nand actually get responses. Hereâs our recommended, hyper-practical approach.\nPrerequisites/tooling Buy a month or two of LinkedIn Sales Navigator. This\nwill run you a few hundred dollars, but itâs worth it. Get an account with an\nemail discovery tool like RocketReach (an excellent email discovery tool). Get\nStreak, which lets you do mail merges in Gmail. You create an email template,\nwith variables for everything from recipient name to long snippets of\npersonalized text, and then you upload a CSV with all the values. The\nresulting emails feel personalized but get sent to hundreds of people at once.\nTreat your job search like a sales funnel If youâre an engineer, chances are\nyou havenât ever done sales (maybe you had a job in high school selling Cutco\nknives or magazines, in which case what weâre about to say will resonate). But\nif you do sales for any appreciable amount of time, youâll start thinking\nabout everything in life as a funnel. Funnels are wide at the top and narrow\nat the bottom. Thatâs why theyâre such an apt metaphor for the sales process â\nyou do a lot of outreach, and you donât get many responses. Of the responses\nyou do get, relatively few will do the thing you want them to do. And even\nfewer will ultimately âcloseâ (aka, buying â or, in this case, hiring). In\nyour engineering career, youâve intellectually mastered many abstract concepts\nthat are much more complex than a funnel. Despite its simplicity, however, the\nfunnel is one of the hardest concepts to internalize emotionally, especially\nfor people who are used to having control over outcomes. When you write code\nfor n hours, you can expect that you will build m features. In sales though,\nyou do a lot of work, very little of it will pan out, and when it does pan\nout, it can feel almost random; an impersonal, mediocre email gets a response\nwhile your beautifully targeted email is met with deafening silence. And then\nthereâs rejection. When you apply to jobs online and donât hear back, it\nstings, but the sting is softened by the possibility that a human never even\nsaw your application. Youâre not reaching out to people when you apply online;\nyouâre dealing with a bureaucratic machine. On the other hand, when you email\na real human and they donât respond, that hurts: you put yourself out there,\nsomeone made a value judgment about you, and you lost. The good news is that,\nafter a while, the pain lessens, and you build up some useful emotional\ncalluses and acquire the thousand-yard stare of someone whoâs been rejected a\nmillion times for a million reasons, ranging from soul-crushingly legitimate\nto incontrovertibly random. Sadly, thereâs no shortcut. Youâve got to do the\nreps, youâve got to get the rejections, and youâve got to pick yourself up\nagain. You get used to it, and then it doesnât hurt as much, because\nexperience has taught you that if you keep going, you will eventually get to a\nyes. What to actually do First, come up with a target list of companies. How\nto do that is out of scope for this post, but we may write about it in the\nfuture. For now, weâll assume you have a list. Once you have your list of\ncompanies, use LinkedIn Sales Navigator to find hiring managers at those\ncompanies (or founders or directors or VPs, as above). Below is an example\nquery where we look for Google hiring managers. You might think that Google is\nso big that sifting through all their various hiring managers will be\nintractable. Fortunately, you can whittle down the list to a pretty manageable\nsize by applying some filters. Here are our filters: Just targeting managers ,\nnot directors or VPs. Google is a huge organization. You want the people who\nare most likely to help, and theyâre the ones who are struggling to hire for\ntheir teams. , not directors or VPs. Google is a huge organization. You want\nthe people who are most likely to help, and theyâre the ones who are\nstruggling to hire for their teams. In position for less than 2 years: These\nare the people who are still trying to prove themselves and who are less\nlikely to have a long-standing relationship with their recruiter to the point\nwhere they only rely on internal recruiting and overlook other sources of\ncandidates. These are the people who are still trying to prove themselves and\nwho are less likely to have a long-standing relationship with their recruiter\nto the point where they only rely on internal recruiting and overlook other\nsources of candidates. Geography: Let's focus on the places we most want to\nwork. Let's focus on the places we most want to work. 1st- or 2nd-degree\nconnection: This way, when they look you up, theyâll see some social proof.\nYou can expand this to 3rd-degree connections, if needed. Once you have your\nlist, put their LinkedIn URLs into a spreadsheet. Then, do a pass through your\ntargetsâ profiles and see if any of them link to personal websites, social\nmedia accounts, blogs, or anything else that will help you find common ground\nwith them. Add any useful links in your spreadsheet because weâll be mining\nthem when we actually write our emails. Look up their email addresses Once you\nhave your list of LinkedIn URLs, use a tool like RocketReach to look up their\nemails. Why not reach out on LinkedIn? While recruiters live on LinkedIn,\nmanagers generally do not. Possibly, they don't even like or check LinkedIn\nmuch. They live in their emails, so that's where you want to target them.\nRocketReach is a nice tool for email discovery because 1) it takes LinkedIn\nURLs as inputs and 2) its email database is generally up-to-date and correct.1\nIf RocketReach fails or you don't wish to pay for it, you might just be able\nto guess their email address, as email addresses tend to follow common forms:\naline@interviewing.io (my actual email address), alerner@interviewing.io, or\naline.lerner@interviewing.io. Where possible, contact managers via their work\nemail address.2 In some cases, you wonât be able to find their work email, in\nwhich case itâs acceptable to fall back to their personal email. Write\nsuccinct, highly personalized emails Next, compose a fairly personalized, yet\nshort, email. All too often, candidates write a long, generic cover letter\nthatâs obviously been sent to a ton of people. I get many emails that look\nlike this: Donât do this! Donât do this either! There is nothing here about\nwhy this candidate is a good fit for interviewing.io, and the bullets arenât\ncompelling enough on their own. Note that this particular email is from a\nmarketer, not an engineer, but the anti-patterns are the same. Emails like the\nabove are impersonal, but worst of all, they have a poor signal-to-noise ratio\nâ I want to find a reason to say yes and to invest my valuable time into this\nperson. But theyâre not giving me one, and theyâre making me work for it in\nthe process. Don't open email with how they found you. This is a big pet peeve\nof ours. I donât care how you found me! I know Iâm on LinkedIn. What I care\nabout is why talking to you will add value for me or why youâre interesting.\nUse the most significant real estate in the email, the first sentence, to tell\nme that! This is a big pet peeve of ours. I donât care how you found me! I\nknow Iâm on LinkedIn. What I care about is why talking to you will add value\nfor me or why youâre interesting. Use the most significant real estate in the\nemail, the first sentence, to tell me that! Don't be overly formal in how you\naddress the person. Use their first name. Don't get their gender wrong (e.g.,\nreferring to a woman as \"sir\" â youâd be surprised how often this happens).\n(e.g., referring to a woman as \"sir\" â youâd be surprised how often this\nhappens). Don't paste in a generic cover letter. These are sure to get ignored\nimmediately â if youâre not going to put in the effort to write to me\npersonally, why would I put in the effort to read your email? These are sure\nto get ignored immediately â if youâre not going to put in the effort to write\nto me personally, why would I put in the effort to read your email? Don't\nforget to include a link to a LinkedIn or a personal website. We donât\nrecommend attaching your resume, though. It can seem overly formal/somewhat\npresumptuous if you're trying to build rapport. More broadly, if you want\nsomeone to go out on a limb for you, make it dead simple for them to justify\nexpending their social/political capital on you. Hiring managers, as a rule,\nwant to help. Make it a no-brainer for them. There are three components to a\ngreat cold email: Common ground with your target Proof that youâre worthy of\ntheir time A strong call to action Not every cold email will have (1) because\nyou wonât always be able to find common ground with everyone â thereâs simply\nnot enough information out there about some targets to be able to craft a\ncompelling narrative thatâs highly personalized to them. But every cold email\nyou write should have (2). It is your job to sell yourself quickly and\nsuccinctly. You want your target to feel like theyâd be an idiot to pass up\nthe chance to talk to you. Finding common ground The email below is personal,\nsuccinct, and finds common ground. Not only that, but it conveniently finds\ncommon ground that benefits the candidate (a soft-spot for non-traditional\ncandidates, like himself!). To find common ground, reference something your\ntarget cares about. Then either show them that you care about it too or that\nhelping you would fit into their worldview and further that cause. As we\nmentioned above, finding common ground may be tough because there might not be\nenough information available about your target, but itâs important to do the\nwork before you give up on this route â finding common ground is the tactic\nthatâs going to get you the highest response rates. Here are some examples of\ngreat ways to build common ground: Reference a project they worked on (maybe\nthey wrote a blog post about it, mentioned it in a comment on Hacker News, or\nare a contributor to some open source project). Thenâ¦ If possible, talk about\nrelevant work youâve done. Itâs important not to make this connection too\ntenuous. If you do, this approach might backfire because theyâll start to get\nexcited about you, only to be let down and ultimately feel tricked. If you do\nnot have relevant work to share, ask a thoughtful question or two about\ntheirs. Reference a controversial point of view that they hold, and affirm it\nin an authentic way. In the absence of something technical, itâs okay to\nreference something non-technical you've seen on their public profiles. We've\nseen candidates connect with strangers based on a shared love of Star Wars or\nHearthstone. We understand that you won't always be able to find common\nground. But if you can, it'll help you a lot, especially if youâre light on\nsocial proof or accomplishments. Selling yourself Selling yourself is usually\nabout one of two things: Accomplishments: What have you built or created?\nSocial proof: Have you worked at a top company or attended a top school? Some\npeople are fortunate enough to have both, but many will have just one. Thatâs\nokay. Weâll work with what you have! Accomplishments What have you done that\nmost other people havenât? What have you done that, if you were to tell it to\na stranger, would cause them to pause and think you're special or interesting?\nBelow are some examples: Youâve had a blog post about a technical topic or a\npersonal project do well 3 on Hacker News, Reddit, or social media. on Hacker\nNews, Reddit, or social media. Something you built at work got some great\npress when your company announced its last funding round. You refactored a\npiece of code at work, and now it runs 100X faster. You won a company\nhackathon. Youâre a core contributor to a notable open-source project.\nSomething you built is being used by a number of other people. Social proof\nSocial proof is more about your pedigree. If you attended a top school or\nworked at a company known for having a high engineering bar, you should\nabsolutely mention it! People won't click on links or open your resume until\nafter they're interested, so you need to get them interested right away. That\nis: you should spoon feed them the most impressive-sounding things about you\nout of the gate. This may feel strange and uncomfortable, like youâre\nbragging. We assure you, however, that itâs necessary to get your targetâs\nattention. Theyâre not thinking youâre bragging. Theyâre thinking, âIs this\nworth my time?â Your job is to convince them that it is. Also, donât forget to\nlink to your LinkedIn or personal website. Attaching a resume may feel too\nheavy-handed for a first conversation, as we discussed above. Here's an\nexample of a prospective intern, leveraging both social proof and\naccomplishments, to write a compelling email. His email isn't super\npersonalized, but he did make some effort to say that what we do at\ninterviewing.io is important. Formulating a strong call to action A call to\naction is an invitation for the recipient to do something. You can go one of\ntwo ways with your call to action: ask for a job interview or start a\nconversation. Which you do should be a function of how much firepower you have\nin the way of social proof and accomplishments. Itâs not fair, but if you can\nget your targetâs attention with one or both of those, being bold and asking\nfor a job interview makes sense. This approach can be effective, but it wonât\nwork for most peopleâ¦ because most people donât have enough social proof or\naccomplishments to justify this type of request. If you canât leverage social\nproof or accomplishments, youâre going to have to work harder and bank\nentirely on building common ground, which will likely take some time and\neffort and involve a live conversation before theyâre convinced to expend\ntheir social capital on you. If youâre asking for an interview, just come\nright out and say it. You can use the intern candidateâs email from earlier as\na guide. However, this isnât our preferred way to do it, and we really\nrecommend starting a conversation instead. Take a look at the email below. In\nthis email, the candidate doesnât ask me about jobs â he just asks to meet to\ndiscuss a topic. Indeed, heâs done his research. I write a ton about judging\nresumes, and itâs a topic I could go on about for hours if youâll let me. His\nemail read like heâs genuinely interested in the subject and that weâd have a\ngood conversation, so of course I responded. Youâd be surprised how rare\nemails like this are. If you can find the topic your target cares about and\nwrite something that shows earnest, genuine interest, theyâll respond. With\nthese emails, youâre asking for a conversation, not a job interviewâ¦ because\nthe conversation is what will hopefully prove to the hiring manager that\nyouâre worth interviewing. Then, once you have a conversation, the hiring\nmanager will walk away with the impression that youâre a competent, thoughtful\nhuman being whoâs interested in this sort of work. From there, getting a job\ninterview will feel like an afterthought. As such, donât talk about jobs at\nall in this type of email, and in this particular case, donât attach your\nresume â that will feel out of place and transactional. You can and should\nlink to your LinkedIn so they know who you are and have some context. But\nspend the bulk of the email building common ground and coming up with an\ninteresting reason for the two of you to talk. This approach is much more\neffective than asking for an interview out of the gate! Youâre not going to\nland a job from one email, so, as with any seemingly insurmountable goal, itâs\nimportant to think of your outreach as a series of steps where you put one\nfoot in front of the other. Like in sales, all you need is to get to a\nconversation. If your call to action is to set up a time to talk (which it\nprobably should be because itâs specific), we recommend providing them with a\ntime window. \"Would you want to meet up sometime?\" puts the burden on the\nrecipient to pose a time, while \"Can we talk next Monday at 3pm?\" is\nproblematic because, most likely, they aren't free then. Instead, try\nsomething like the candidate above did: \"Would you be available sometime\nwithin the next two weeks for a thirty-minute call? I'm free most weekdays\nbetween X and Y and can pretty much do any time on weekends if those are\nbetter for you.\" Two templates for you to use Below are two templates you can\nuse for cold outreach. The first one is ideal but requires more effort and\ncan't always be used. The second one is weaker but more generic. You can\nchoose what fits your needs best. We expect both of these templates to be far\nmore effective than throwing your resume into the blackhole of online portals.\nTemplate #1: Use this template if your target has an online presence This\ntemplate includes common ground, accomplishments/social proof, and a call to\naction. It will get you the highest response rates, possibly anywhere from\n25-50%. However, it can be challenging to use because it requires you to 1) do\na deep dive into their online presence and 2) tie what you find back to\nsomething youâre doing. Sometimes, that tie-in might be tenuous or non-\nexistent (in which case, maybe skip it). Hey {Their First Name}, Iâve read\nyour work on {insert some details about their writing}, and I {insert your\nthoughts on the work}. {If you can make the connection between their work and\nyours, talk about something similar youâve been working on.} {If you cannot,\nask them a specific, thoughtful question about your work. Donât worry about\nmaking it âthe perfect questionâ like you might when you attend a talk and\nwant to sound smart. Any earnest question will do. You donât have to use this\nas a chance to show off!} {Finally, close with a sentence or two about you, if\nyou have some social proof or impressive accomplishments you can share.} Would\nyou be up for a quick chat this week or next? Best, {Your name} {Insert 1-2\nuseful links about you. If you have a personal site, thatâs great. If not, a\nLinkedIn will do.} Note that in this template, we leave some places for you to\ninsert some social proof and your accomplishments. Even though this email is\nprimarily about them and their work, and your references to yourself are\nprimarily through that lens, it never hurts to drop in a few pieces of\nevidence that youâre someone whoâs accomplished things and/or someone who\nlooks good on paper. Template #2: Use this template if you donât have anything\nexcept a LinkedIn profile for your target The reality is that you wonât always\nhave enough information about your target to find common ground. In this case,\nyouâll lead with accomplishments/social proof and a strong call to action. We\nexpect this template will get you response rates anywhere from 5-25%,\ndepending on the strength of your achievements and pedigree. That said, we\nrecommend treating this template as a last resort. Using it means youâve\nexhausted any possibility of writing something personal. Hey {Their First\nName}, {List 2 things about you. They can be impressive accomplishments of\nyours or social proof, as above.} Iâm really interested in the work youâre\ndoing at {Company Name}. {If you know what team theyâre on and are interested\nin that specific team or are familiar with that teamâs accomplishments, great!\nIf not, just write a few earnest sentences about why the company is\ninteresting to you.} Would you be up for a quick chat this week or next? Best,\n{Your name} {Insert 1-2 useful links about you. If you have a personal site,\nthatâs great. If not, a LinkedIn will do.} Keep your note short. The intent\nhere is to make your target believe youâre an entity worth paying attention\nto, rather than them doing the easy thing: deleting your email. Regardless of\nwhich template you use, just like you have to manage your psychology when you\nprepare for technical interviews, you have to manage your psychology when\ndoing outreach like this. You have to: Mentally prepare yourself for the slog\nof writing personalized emails and doing the requisite research. Get used to\nrejection. If you do write good emails and target the right people, youâll\nhave a much better hit rate than when you apply online, but you will still get\nghosted a lot, and it will sting much more because, this time, you actually\ntried. But you know what? If you stick with it and do this right, within a few\nmonths, youâll have a connection to a top-tier company. Now that youâve girded\nyour proverbial loins, itâs time to do the work. If you follow our advice,\nyouâll get 1-2 orders of magnitude more responses than from applying online,\nand with this approach, youâll have at least a hiring manager at that company\nrooting for you! Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/how-to-get-in-the-door-at-top-companies-cold-out-reach-to-hiring-managers-part-2",
      "author": "",
      "user_id": ""
    },
    {
      "title": "Exactly what to say when recruiters ask you to name the first numberâ¦ and other negotiation word-for-words",
      "content": "about salary negotiation but many tend to skew a bit theoretical. In my\nexperience, one of the hardest things about negotiating your salary is knowing\nwhat to say in tough, ambiguous situations with a power balance thatâs not in\nyour favor. Whatâs OK? Whatâs rude? What are the social norms? And so on.\nBefore I started interviewing.io, Iâve worked as a software engineer, an in-\nhouse recruiter, and an agency recruiter, so Iâve literally been on all sides\nof the negotiating table. For the last few years, Iâve been guest-lecturing\nMITâs 6.UAT, a class about technical communication for computer science\nmajors. Every semester, negotiation is one of the most-requested topics from\nstudents. In this post, Iâm sharing the content of that lecture, which is\ntargeted toward students, but has served seasoned industry folks just as well.\nYouâre never too young or too old to advocate for yourself. Btw, if you donât\nlike reading and prefer long, rambly diatribes in front of an unsightly glass\nwall, I covered most of this material (and other stuff) in a webinar I did\nwith the fine people at Udacity (where I used to run hiring) a few months ago.\nSo, pick your poison. Why negotiate my salary at all, especially if Iâm\njunior? If youâre early in your career, you might say that negotiation isnât\nworth the hassle â after all, junior roles have pretty narrow salary bands.\nThere are a few reasons this view is short-sighted and wrong. First, though\nitâs pretty unlikely in the grand scheme of things, if youâre applying to a\nstartup, there might come a magical day when your equity is worth something.\nThis is especially true if youâre an early employee â with a good exit, a\ndelta of a few tenths of a percent might end up being worth a down payment on\na home in San Francisco. But, letâs get real, your equity is likely worthless\n(except interviewing.ioâs equityâ¦ thatâs totes gonna be worth something), so\nlet me give you a better, more immediate reason to learn to haggle early in\nyour career, precisely because thatâs when the stakes are low. Humans are\nfrighteningly adaptable creatures. Scared of public speaking? Give 3 talks.\nThe first one will be gut-wrenchingly horrific, the stuff of nightmares. Your\nvoice will crack, youâll mumble, and the whole time, youâll want to vomit. The\nnext one will be nerve-wracking. The last one will mostly be OK. And after\nthat, youâll be just fine. Same thing applies to approach anxiety,\nmathematical proofs, sex, and, you guessed it, salary negotiation! So, make\nall the awkward, teeth-cringing mistakes now, while it doesnât matter, and\nwhere failure will cost you $5K or $10K a year. Because the further along you\nget in your career, the bigger the upside will beâ¦ and the bigger the downside\nwill be for not negotiating. Not only will the salary bands be wider for\nsenior roles, but as you get more senior, more of your comp comes from equity,\nand equity has an even wider range for negotiating. Negotiating your stock\nwell can make 6-figure differences and beyond (especially if you apply some of\nthese same skills to negotiating with investors over term sheets, should you\never start your own company)â¦ so learn these skills (and fail) while youâre\nyoung, because the older you get, the harder itâs going to be to start and the\nmore high-stakes itâs going to be. So, below, as promised, Iâll give you a few\narchetypal, stress-inducing situations and what to say, word-for-word in each\none. But first, let me address the elephant in the roomâ¦ Will my offer be\nrescinded if I try to negotiate my salary? As I mentioned earlier, this blog\npost is coming out of a lecture I give at MIT. Every semester, I start the\nnegotiation portion of the lecture with the unshakeable refrain that no one\nwill ever rescind your offer for negotiating. Last semester was different,\nthough. I was just starting to feel my oats and get into my talk (the\nnegotiation piece comes about halfway through) and smugly recited the bit\nabout offers never being rescinded, followed by my usual caveatâ¦ âunless you\nact like a douche while negotiating.â Then, a hand shot up in the back of the\nroom. Ah ha, I thought to myself, one of the non-believers. Ready to placate\nhim, I called on the gentleman in the back. âMy offer got rescinded for\nnegotiation.â The class broke out into uproarious laughter. I laughed too. It\nwas kind of funnyâ¦ but it was also unnerving, and I wanted to get to the\nbottom of it. âWere you a giant jerk when you negotiated?â âNope.â Shit, OK,\nwhat else can I come up withâ¦ âWere you applying at a really small company\nwith maybe one open role?â I asked, praying against hope that heâd say yes.\nâYes.â âThank god.â So, thereâs the one exception Iâve found so far to my\nblanket statement. After working with hundreds and hundreds of candidates back\nwhen I was still a recruiter, I had never heard or seen an offer get rescinded\n(and none of my candidates acted like douches while negotiating, thank god),\nuntil then. So, if youâre talking to a super small company with one role that\ncloses as soon as they find someone, yes, then they might rescind the offer.\nBut, to be honest, and Iâm not just saying this because I was wrong in front\nof hundreds of bloodthirsty undergrads, an early startup punishing a\nprospective employee for being entrepreneurial is a huge red flag to me. OK,\nso, now onto the bit where I tell you exactly what to say.1 What to say when\nasked to name the first number There will come a time in every job search\nwhere a recruiter will ask you about your compensation expectations. This will\nlikely happen very early in said search, maybe even during the first call\nyouâll ever have with the company. I think this is a heinous, illaudable\npractice fraught with value asymmetry. Companies know their salary ranges and\nroughly what youâre worth to them before they ever talk to you (barring\nphenomenal performance in interviews which kicks you into a different band).\nAnd they know what cost of living is in your area. So they already have all\nthe info they need about you, while you have none about them or the role or\neven your market value. Sure, there are some extenuating circumstances where\nyou are too expensive, e.g. youâre like an L6 at Google and are talking to an\nearly stage startup that can only afford to pay you 100K a year in base, but\nhonestly even in that situation, if the job is cool enough and if you have the\nsavings, you might take it anyway. So, basically, telling them something will\nonly hurt you and never help you. So donât do it. Now, hereâs exactly what to\nsay when asked to name the first number. At this point, I donât feel equipped\nto throw out a number because Iâd like to find out more about the opportunity\nfirst â right now, I simply donât have the data to be able to say something\nconcrete. If you end up making me an offer, I would be more than happy to\niterate on it if needed and figure out something that works. I also promise\nnot to accept other offers until I have a chance to discuss them with you.\nTADA! What to say when youâre handed an exploding offer Exploding offers, in\nmy book, are the last bastion of the incompetent. The idea goes something like\nthisâ¦ if we give a candidate an aggressive deadline, theyâll have less of a\nchance to talk to other companies. Game theory for the insipid. Having been on\nthe other side of the table, I know just how arbitrary offer deadlines often\nare. Deadlines make sense when there is a limited number of positions and\napplicants all come in at the same time (e.g. internships). They do not make\nany sense in this market, where companies are perpetually hiring all the time\nâ therefore itâs an entirely artificial construct. Joel Spolsky, the creator\nof Trello and Stack Overflow, had something particularly biting to say on the\nmatter of exploding offers many years ago (the full post, Exploding Offer\nSeason, is really good): âHereâs what youâre thinking. Youâre thinking, well,\nthatâs a good company, not my first choice, but still a good offer, and Iâd\nhate to lose this opportunity. And you donât know for sure if your number one\nchoice would even hire you. So you accept the offer at your second-choice\ncompany and never go to any other interviews. And now, you lost out. Youâre\ngoing to spend several years of your life in some cold dark cubicle with a\ncrazy boss who couldnât program a twenty out of an ATM, while some recruiter\nsomewhere gets a $1000 bonus because she was better at negotiating than you\nwere.â Even in the case of internships, offer deadlines need not be as\naggressive as they often are, and Iâm happy to report that many college career\ncenters have taken stands against exploding offers. Nevertheless, if youâre\nnot a student or if your school hasnât outlawed this vile practice, hereâs\nexactly what to say if it ever happens to you. I would very much appreciate\nhaving a bit more time. Iâm very excited about Company X. At the same time,\nchoosing where I work is extremely important to me. Of course, I will not drag\nthings out, and I will continue to keep you in the loop, but I hope you can\nunderstand my desire to make as informed of a decision as possible. How about\nI make a decision byâ¦? The reverse used car salesmanâ¦ or what to say to always\nget more At the end of the day, the best way to get more money is to have\nother offers. I know, I know, interviewing sucks and is a giant gauntlet-slog,\nbut in many cases, having just one other offer (so, I donât know, spending a\nfew extra days of your time spread over a few weeks) can get you at least $10K\nextra. Itâs a pretty rational, clear-cut argument for biting the slog-bullet\nand doing a few more interviews. One anecdote Iâll share on the subject goes\nlike this. A few years ago, a close friend of mine whoâs notoriously bad at\nnegotiation and hates it with a passion was interviewing at one of the big 4\ncompanies. I was trying to talk him into getting out there just a little bit,\nfor the love of god, and talk to at least one more company. I ended up\nintroducing him to a mid-sized startup where he quickly got an onsite\ninterview. Just mentioning that he had an onsite at this company to his\nrecruiter from the bigco got him an extra $5K in his signing bonus. Offers\nare, of course, better than onsites, but in a pinch, even onsites will doâ¦\nbecause every onsite increases your odds of not accepting the offer from the\ncompany youâre negotiating with. So, letâs say you do have some offers. Do you\nreveal the details? The answer is that it depends. If the cash parts of the\noffers you have are worth more than the one you have in hand, then you can\nreveal the details. If theyâre worth more in total but less in cash, itâs a\nbit dicier because equity at smaller companies is kind of worthlessâ¦ you can\nstill use it as leverage if you tell the story that that equity is worth more\nto YOU, but thatâs going to take a bit more finesse, so if youâve never\nnegotiated before, you might want to hold off. If the cash part of your equity\nis not worth more, itâs sufficient to say you have offers and when pressed,\nyou can simply say that youâre not sharing the details (itâs ok not to share\nthe details). But whether you reveal details or not, hereâs the basic formula\nfor getting more. See why I call it the reverse used car salesman? I have the\nfollowing onsites/offers, and Iâm still interviewing at Company X and Company\nY, but Iâm really excited about this opportunity and will drop my other stuff\nand SIGN TODAY ifâ¦ So, âifâ what? I propose listing 3 things you want, which\nwill typically be: Equity Salary Signing/relocation bonus The reason I list 3\nthings above isnât because I expect youâll be able to get all 3, but this way,\nyouâre giving the person youâre negotiating with some options. In my\nexperience, youâll likely get 2 out of the 3. So, what amounts should you ask\nfor when executing on the reverse used car salesman? Itâs usually easier to\nget equity and bonuses than salary (signing bonus is a one-off rather than\nsomething that repeats every year). Therefore, itâs not crazy to ask for\n1.5X-2X the equity and an extra 10-15% in salary. For the bonus portion, a lot\ndepends on the size of the company, but if youâre talking to a company thatâs\nbeyond seed stage, you can safely ask for at least 20% of your base salary as\na signing bonus.2 What if the company says no to all or most of these and are\na big enough brand to where you donât have much of a leg to stand on? You can\nstill get creative. One of our users told me about a sweet deal he came up\nwith â he said heâd sign today if he got to choose the team he could join and\nhad a specific team in mind. Other negotiation resources As I mentioned at the\nbeginning of this post, there are plenty of blog posts and resources on the\ninternets about negotiation, so Iâll just mention two of my favorites. The\nfirst is a riveting, first-hand account of negotiation adventures from one of\nmy favorite writers in this space, Haseeb Qureshi. In his post, Haseeb talks\nabout how he negotiated for a 250K (total package) offer with Airbnb and what\nhe learned along the way. Itâs one of the most honest and thoughtful accounts\nof the negotiation process Iâve ever read. The second post Iâll recommend is a\nseminal work in salary negotiation by Patrick McKenzie (patio11 on Hacker\nNews, in case thatâs more recognizable). I read it back when I was still an\nengineer, and it was one of those things that indelibly changed how I looked\nat the world. I still madly link anyone and everyone who asks me about\nnegotiation to this piece of writing, and itâs still bookmarked in my browser.\nIf youâre an interviewing.io user and have a job offer or five that youâre\nweighing and want to know exactly what to say when negotiating in your own\nnuanced, unique situation, please email me, and Iâll whisper sweet, fiscal\nnothings in your ear like a modern-day Cyrano de Bergerac wooing the sweet\nmistress that is capitalism.3 Footnotes",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/negotiate-salary-recruiter",
      "author": "",
      "user_id": ""
    },
    {
      "title": "Don't make recruiters think, or, why your resume is bad and how to fix it",
      "content": "design called Donât Make Me Think. Itâs a classic, and the main point is that\ngood design should make everything painfully obvious to users without\ndemanding anything of them. Resumes are just the same. Your resume shouldnât\nmake recruiters think. It should serve up the most important things about you\non a platter that they can digest in 30 seconds or less. Before I share some\nresume tips, thereâs something important I want to reiterate: Donât spend a\nlot of time on your resume. You can read my piece about how resume writing is\nsnake oil, but the TL;DR is that recruiters spend a median of 30 seconds\nlooking at resumes, and most of that is spent looking for top-tier companies.\nIf you donât have top-tier companies (and in some cases niche skills),\nwordsmithing your bullets or rearranging your sections or changing your layout\nwonât help. If you do have top-tier companies, sometimes doing some\nwordsmithing and rearrangement will helpâ¦ if your top company experience or\nniche skills are buried. If you donât have top-tier brands, the best bang for\nyour buck is to switch from online applications to hiring manager outreach.\nHereâs how to do it. With that said, I know that no matter what I say, people\nwill still grind on their resumes instead of doing outreach. Grinding on\nresumes is safe. Outreach is scary and opens you up to personal (rather than\nimpersonal) rejection. So, look, if youâre going to do something to your\nresume, letâs make sure that that something is low-effort and high-return.\nUnlike the endless resume tweaking that most candidates do, these changes\ndirectly address how recruiters actually read resumes. Here we go. Stop\nputting filler buzzwords in your \"About\" section. Use it to spell out the most\nimpressive things about you. Your \"About\" or \"Summary\" section is prime real\nestate. Yet so many candidates fill this section with meaningless jargon like\n\"passionate self-starter\" or \"detail-oriented team player.\" Instead, use this\nsection to explicitly tell recruiters the 2-3 most impressive things about you\nin plain English. This is your chance to control the narrative. Want\nrecruiters to take something away from reading your resume? Donât assume\ntheyâll figure it out. Theyâre not reading it long enough to intuit anything.\nSpell it out for them verbatim in this section. Do this, not that: â Results-\ndriven full-stack engineer with a passion for scalable systems and user-\ncentric design â Senior engineer with 3 years at Amazon, promoted twice in 3\nyears (2X the company average)1 Donât include your GPA if itâs under 3.8 This\nis simple but effective: only include your GPA if it's 3.8 or higher2. A\nmiddling GPA doesn't help your case and might inadvertently signal academic\nmediocrity. If your GPA isn't stellar, focus on other academic achievements:\nhackathons, technical competitions, fellowships or scholarships. These provide\nbetter signals about your capabilities than a so-so GPA. Context matters for\nlesser-known companies If you've worked at Google or Facebook, recruiters\ninstantly get what kind of company you're coming from. But when you have\n\"TechStartup123\" on your resume, they have no idea what they're looking at or\nhow impressive it might be. For lesser-known companies, include a one-line\ndescription explaining what the company does, along with any impressive\nmetrics or investors: â \"Software Engineer, DevTools Inc.\" â \"Software\nEngineer, DevTools Inc. ($50M Series B from Sequoia, 2M+ active users)\" This\nsimple addition provides crucial context that helps recruiters evaluate your\nexperience properly. Without it, they might discount valuable experience\nsimply because they don't recognize the company name. Avoid the \"job-hopper\"\nmisperception Here's a common mistake: listing each role at the same company\nas if they were separate jobs. This can make recruiters think you've job-\nhopped, which is often seen as a red flag. Instead, group different roles\nunder the same company heading: â Listing separate entries for \"Junior\nDeveloper at XYZ\" and \"Senior Developer at XYZ\" â \"XYZ Company - Senior\nDeveloper (2021-Present) - Junior Developer (2019-2021) Promoted in 2 years\nvs. company average of 3.5 years\" The second format clearly shows growth\nwithin a single company and explicitly highlights faster-than-average\npromotion, which is a strong positive signal. (You may also want to carry over\nyour promotion cadence into your âAboutâ section, as you saw above.) Be\ncrystal clear about your work authorization status This one is particularly\ncrucial if you have a foreign-sounding name and/or education outside the US.\nI've seen many qualified candidates get passed over because recruiters assumed\nthey needed visa sponsorship when they actually didn't. Don't leave this to\nchance. Make your work status explicit in your header or summary section: â No\nmention of work authorization (leaving recruiters to guess) â \"US Citizen\" or\n\"Green Card Holder\" or \"Authorized to work in the US without visa sponsorship\"\nCareer changers: provide context about the change If you've switched careers,\nyour resume can look confusing without proper context. Recruiters might\nstruggle to understand why someone with your background is applying for this\nrole, or they might not recognize how your previous experience translates to\nyour current trajectory. Address this head-on in your âAboutâ section. â\nListing previous career experience with no explanation of your transition â\n\"Transitioned from marketing to software engineering in 2021 after completing\na bootcamp\" or \"Former accountant who pivoted to data science through self-\nstudy and online courses while continuing full-time work\" This context helps\nrecruiters understand your timeline and puts your current title and\nachievements in perspective. Without it, you risk serious misinterpretation:\nRecruiters might think you're far more junior than you actually are in your\nnew field (potentially ruling you out for appropriate-level positions) Or\nconversely, they might assume you have years of relevant experience in your\nnew field (and then wonder why you haven't achieved more in that time) Both\nmisinterpretations can be fatal to your application. By providing a clear\ntimeline of your transition, you help recruiters accurately gauge your\nexperience level and set appropriate expectations. This transparency also\ndemonstrates valuable traits like adaptability and determination. And here's\nanother key point for career changers: you don't need to list all your\nprevious positions before the transition... unless they're impressive. Be\nselective about what pre-transition experience you include: â DON'T include\nmundane or irrelevant details from your previous career that add nothing to\nyour current narrative. Your three years as a retail associate before becoming\na developer probably won't strengthen your software engineering application. â\nDO highlight prestigious achievements from your previous career. If you were,\nsay, a concert pianist, a lawyer who graduated from a top-tier law school, or\na management consultant at McKinsey, absolutely include that. These signal\nthat you're smart and high-achieving, regardless of domain. In conclusion If\nyou do all these things, you may or may not see a return. After all, even the\nimpact of these tweaks pales in comparison to having top brands on your\nresume. But, given that these will take you a few minutes to do, it doesnât\nhurt. Hereâs the TL;DR: Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/stop-trying-to-make-recruiters-think-or-why-your-resume-is-bad-and-how-to-fix-it",
      "author": "",
      "user_id": ""
    },
    {
      "title": "Why resume writing is snake oil",
      "content": "writing industry. Hereâs what it had to say: The global resume writing\nindustry was valued at approximately $1.37 billion in 2024 and is expected to\ngrow steadily, reaching around $1.44 billion by 2025, and about $1.59 billion\nby 2033... The growth is driven by increased demand for professional resume\nservices due to heightened job market competition, coupled with advancements\nin technology and personalization through AI-driven resume writing tools. I\ndonât know if these numbers are exactly true, and I don't know what portion of\nthat is resume writing for engineers specifically, but it doesnât really\nmatter. I am certain that they are directionally correct. As the market has\ngotten worse, Iâve heard more and more job seekers ask for resume reviews and\nrewrites, and Iâve seen many companies in the interview prep space start\noffering resume reviews. Theyâre all selling snake oil, and no one should\nspend a dime on it. Iâll explain why in a little bit, but first letâs talk\nabout something else I found on the internet. A few days ago, I saw this post\non Reddit. It was a leaked internal set of hiring requirements (sometimes\ncalled a âhiring specâ) that looked like this: Of course, there was the usual\nReddit shock and awe and pearl clutching about whether this hiring spec could\nbe real. Yes, itâs real. As someone whoâs been in hiring for over a decade,\nIâm certain of it. And not only is it real, but itâs routine. Itâs business as\nusual. Iâve been a head of talent at top startups, and I used to run my own\nrecruiting agency where I hired for a bunch of companies who have since become\nhousehold names. When I worked as an agency recruiter 10 years ago, companies\nregularly shared documents like this one with me. The only difference between\nthen and now is the idea of a âdiversity bonus.â Everything else hasnât\nchanged in a decade. Documents like this are why I quit recruiting to start\ninterviewing.io. And documents like this are the reason that the entirety of\nthe resume writing profession is a snake oil pit. There is one notable\nexception to this rule, which Iâll talk about, but most people should not\nspend a dime on resume writers. Hereâs why. Recruiters arenât reading your\nresume. Theyâre skimming it for very specific things. In 2024, we ran a study\nwhere we asked 76 recruiters to look at resumes and indicate which candidates\ntheyâd want to interview. Recruiters are most likely to contact you if: You\nlook good on paper (i.e., you have top-tier companies and/or schools on your\nresumeâ¦ just like in the âhiring specâ above) You belong to a group thatâs\nbeen traditionally underrepresented in tech (i.e., youâre a woman or a person\nof colorâ¦ just like in the âhiring specâ above) To some extent, if you have\nniche skills (e.g., ML engineering) What's missing? Things like, for example,\nhaving a quantifiable impact or demonstrating teamwork. Essentially,\neverything recruiters look for is stuff that you either have or you don't. In\nthis same study, we also learned that when recruiters do look at resumes, they\nspend an average of 30 seconds reviewing them. That's not enough time to read\nevery bullet. Instead, they are mainly skimming for recognizable companies and\nschools. Here is an excellent example, also from Reddit, that makes this\ndifference very clear. This resume certainly passes the skim-test: good\ncompanies, appropriate roles, and a good university too. It's only when you\nactually spend more than 30 seconds reading the resume that you learn that not\nonly is this resume obviously fake, but it also celebrates accomplishments\nlike \"Spread Herpes STD to 60% of intern team.â And yet, it got a 90% callback\nrate. Recruiters just aren't reading the details. In other words, either you\nalready have what recruiters are looking for (which often may be different\nthan whatâs explicitly listed in a job descriptionâ¦ because they certainly\narenât sharing the real âhiring specâ) or you donât. If you have it, then you\ndonât need a resume writer â though itâs always smart to make it easier for\nrecruiters to find the things theyâre looking for. If you donât have what\ntheyâre looking for, no amount of agonizing over how you present yourself is\ngoing to move the needle. So, if recruiters arenât reading and are just\nskimming for brands, why do people agonize over their resumes and give money\nto resume writers? Why the resume myth persists In interviewing.ioâs Discord\nserver, I regularly see requests for resume reviews. I also see other\ninterview prep companies charging money for resume reviews. Presumably they\ncharge because the demand is there. But why are people willing to pay for\nsomething that is completely useless? I think itâs a mix of misinformation and\nthe desire for control. Recruiters rarely admit that theyâre skimming\nprimarily for brands. If you read recruitersâ advice for job seekers, it\nalmost always includes advice about quantifying your impact, including your\nside projects1, and so on. These bits of advice are well-intentioned, Iâm\nsure, but they perpetuate a harmful myth and an exploitative resume writing\ncottage industry. The other reason is control. Job searches are intimidating,\nand putting yourself out there is hard. Itâs much easier to retreat to the\ncomfort of polishing up your bullet points because itâs something you can\ncontrol. You get into a routine, rewrite your bullets, and upload your resume\nto a bunch of places. Then when you donât hear back, you retreat to familiar\nground, grind on your bullets some more, and rinse and repeat. Because itâs\neasier to believe that if you can just get your bullets right, youâll finally\nhear back. That narrative sure beats out the idea that no one is reading your\nresume no matter how much you fine-tune it. The notable exception: If you\nalready look good on paper, polishing your resume CAN be useful. If youâre\nfortunate enough to have top brands on your resume, cleaning it up can be a\ngood use of your time. I still wouldnât hire a resume writer because the\ndetails donât matter very much. Just make sure that recruiters can easily spot\nthe brands. Hereâs an example. Take a look at the before and after screenshots\nof the resume below. Before This resume belongs to one of our users who was\nkind enough to let us share it. He actually has two of the three things that\nrecruiters look for: FAANG experience and a niche title (ML engineer). But\nboth are buried! And the section that gets the most attention is wasted on\nundergraduate awards. As you can see, he spent almost 3 years at Apple, but a\nrecruiter skimming his resume might not notice that because it was a while\nago. Instead, he showcases an undergrad award and some technologies/languages\nthat he knows. Neither of those is nearly as useful to recruiters as FAANG\nexperience. His current title is also ML engineer, and one at the Principal\nlevel at that. But it wasnât always: He went from back-end to SRE to a little\nbit of everything to ML, and because of that, itâs possible a recruiter would\nmiss it as well. After We edited this candidateâs resume to put all the things\nrecruiters look for at the very top of the resume and moved the buzzword soup\nto the bottom. This candidate is obviously well-positioned because he has\nFAANG experience, several top schools, and niche skills â but before, many\nrecruiters didnât spot them. After he made these changes, the number of\ninterviews he got increased by 8X. Note that we didnât really rewrite\nanything. We just moved stuff around. You can do this yourself without needing\na professional writer. For everyone else, stop working on your resume, and\nstart doing outreach. If youâre like most people, you donât have top brands on\ntheir resume, so no amount of rewriting is going to move the needle much.\nInstead of agonizing over it, stop applying and start doing outreach to hiring\nmanagers. Itâs your best shot to get noticed and to get someone to look at you\nas a human being, instead of a collection of brands. Hereâs how to do it. For\na deeper dive into both resume writing and how to get in the door, you can\nread Beyond Cracking the Coding Interview (both chapters are also available\nfor free). Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/why-resume-writing-is-snake-oil",
      "author": "",
      "user_id": ""
    },
    {
      "title": "Read nine chapters of Beyond Cracking the Coding Interview for free",
      "content": "and Nil Mamano, I wrote the official sequel to Cracking the Coding Interview.\nIt's fittingly called Beyond Cracking the Coding Interview.. Now, we're\nreleasing 9 chapters of the book for free! There are two PDFs in the linked\nfolder: The first seven chapters of the book , covering topics such as why\ntechnical interviews are broken, what recruiters won't tell you, why not to\nspend a lot of time on resumes, and how to get in the door at companies\nwithout a referral. , covering topics such as why technical interviews are\nbroken, what recruiters won't tell you, why not to spend a lot of time on\nresumes, and how to get in the door at companies without a referral. Two\ntechnical chapters: Sliding Windows and Binary Search. Our new take on Binary\nSearch teaches one template that works for every binary search problem on\nLeetCode, with only a single-line change you need to remember. The Sliding\nWindows chapter features 6 unique sliding window templates that make off-by-\none errors a thing of the past. Take a look, and let me know what you think.\nYou can reach me at aline@interviewing.io.",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/nine-free-chapters-of-beyond-cracking-the-coding-interview",
      "author": "",
      "user_id": ""
    },
    {
      "title": "How to get in the door at top companies: a data-driven guide for software engineers. Part 1.",
      "content": "about which channels are most effective for getting into the door at great\ncompanies and why. In part 2, we get very tactical and tell you exactly what\nto say and do to get responses. interviewing.io is an anonymous mock interview\nplatform â we help engineers prepare for technical interviews by pairing them\nwith senior FAANG and FAANG-adjacent engineers for mock interviews and\nfeedback. In this market, many of our users are struggling with getting in the\ndoor at companies, so we ran a survey to see whatâs worked well for our users\nand what hasnât, in todayâs difficult climate. In our survey, we gave people\nthe following channels for getting into companies and asked them which were\nthe most and least effective: In-house recruiters contact you Apply online\nWarm referrals Cold referrals Cold outreach to hiring managers Cold outreach\nto recruiters Agency recruiters contact you We also asked them which types of\ncompanies they got responses from: FAANG FAANG-adjacent (e.g., Stripe,\nDropbox, OpenAI, Uber) Large startups Small startups We got ~500 responses.\nAmong survey respondents, which channels were most effective was largely\nconsistent, regardless of company type, but there were some twists depending\non who the candidates were. More on that in a bit. Below are the channels,\nranked by effectiveness.1 When more people found a channel effective than\nineffective, it ended up in the first list. When more people found a channel\nto be ineffective than effective, it ended up on the second list. Recruiting\nchannels that our users found to be effective (ranked from most to least\neffective): Warm referrals In-house recruiters contact you Apply online Cold\noutreach to hiring managers Recruiting channels that our users found to be\nineffective (ranked from least to most ineffective): Cold outreach to\nrecruiters Cold referrals (referrals from people you donât know) Agency\nrecruiters contact you This data came primarily from surveying experienced\nengineers (4+ years), rather than juniors (we donât have that many juniors on\nour platform; average years of experience is 8). If youâre a junior engineer\nin this market, you already know youâre in for a tough time, and weâd advise\nyou to take your destiny into your own hands as much as possible by reaching\nout directly to hiring managers (the same advice we give many of our more\nexperienced users). More on that later in the post. Interestingly, these\nresults were quite consistent between company types. In other words, channels\nthat worked well for FAANGs tended to work well for startups and vice versa.\nOverall, the most useful channels were in-house recruiters (when they reached\nout to you) and warm referrals. Unfortunately, both of these channels are\nsomewhat out of your control. You have very little control over whether\ninternal recruiters reach out to you. There are some things you can do to\nincrease the chances, but theyâre all tied up in your work history and\nidentity, neither of which you can easily change. Weâll talk more about that\nlater on. Warm referrals (i.e., referrals from people you know), on the other\nhand, are very useful and are a bit more in your control, but they still\ndepend on the quality of your network. Below is a diagram comparing the\nutility of all the channels to how much control you have over them. You might\nwonder why we speculatively singled out cold outreach to hiring managers as\nsomething that can be done right, versus the other channels. In our\nexperience, that channel is both misused and underutilized and is the best bet\nfor many candidates, provided they do it correctly. In our next post, weâll\ntell you exactly what to do and what to say when you reach out to hiring\nmanagers â especially if you come from a non-traditional background and arenât\ngetting a lot of recruiter outreach/donât have the network to get warm\nreferrals, reaching out to hiring managers is your absolute best bet. Now\nletâs look at each channel in detail. In-house recruiters contact you This\nchannel is one of the two where you have the least amount of control (the\nother is agency recruiters contacting you, though that one is way less\nuseful). So, how much control do you have over this channel? One bit of\nanalysis we did on our survey data was to try to find patterns in the\nbackground of people who find in-house recruiters particularly useful. Not too\nsurprisingly, some patterns did emerge. In-house recruiters are most likely to\ncontact you if: You look good on paper, i.e., you have top-tier companies\nand/or schools on your resume (in our experience, companies matter more) You\nbelong to a group thatâs been traditionally underrepresented in tech (i.e.,\nyouâre a woman or a person of color) To some extent, though less than the two\nbullets above, if you have niche skills (e.g., ML engineering) These results\narenât unique to just this survey. We recently did a study where we asked a\nbunch of recruiters to look at resumes and tell us which candidates theyâd\nwant to interview. While the intent of the study was to see if recruiters are\ngood at identifying talent (spoiler: they were barely better than a coin\nflip), we learned some other interesting things, including what recruiters\nactually look for when they read a resume. The two most sought-after resume\ntraits were: 1) experience at a top-tier tech company (FAANG or FAANG-\nadjacent) and 2) URM (underrepresented minority) status (in tech, this means\nbeing Black or Hispanic). This mirrored what we saw in our user survey when we\nlooked at commonalities among candidates who got value from in-house\nrecruiters. So how do you use this information to your advantage? You\nobviously canât magic FAANG/FAANG-adjacent experience or URM status out of\nthin air2, but if you do have either, our pragmatic advice is to highlight it\nand make it really easy for recruiters to spot. Of course, whether you want to\nlead with URM status is a personal decision. Weâve heard differing opinions on\nthis and are not here to judge. All we can do is share the data â do with it\nwhat you will. So, how do you make sure that, say, your FAANG experience\nstands out to recruiters? Take a look at the before and after screenshots of\nthe resume below3. This resume belongs to one of our users who was kind enough\nto let us share it. He actually has two of the three things that recruiters\nlook for: FAANG experience and a niche title (ML engineer). But both are\nburied! And the section that gets the most attention is wasted on\nundergraduate awards. Before As you can see, he spent almost 3 years at Apple,\nbut a recruiter skimming his resume might not notice that because it was a\nwhile ago. Instead, he showcases an undergrad award and some\ntechnologies/languages that he knows. Neither of those is nearly as useful to\nrecruiters as FAANG experience. His current title is also ML engineer, and one\nat the Principal level at that. But it wasnât always: He went from back-end to\nSRE to a little bit of everything to ML, and because of that, itâs possible a\nrecruiter would miss it as well. We edited this candidateâs resume to put all\nthe things recruiters look for at the very top of the resume and moved the\nbuzzword soup to the bottom. This candidate is obviously well-positioned\nbecause he has FAANG experience, several top schools, and niche skills â but\nbefore, many recruiters didnât spot them. After he made these changes, the\nnumber of interviews he got increased by 8X. Apply online If youâve ever\napplied to jobs online, then you know itâs kind of like screaming into a black\nhole. Though, according to our survey, some candidates (specifically people\napplying to FAANG/FAANG-adjacent companies and small startups) get some value\nout of this channel, itâs still a numbers game. And for large startups, itâs a\nlosing proposition. According to recruiting tool Gem, applicants that come\nfrom recruiter outreach (called âoutboundâ in recruiter lingo) are 6 - 10X\nmore likely to get hired than applicants who apply online (called âinboundâ).\nAs Lyft recruiting manager Nate Wylie put it: Our dataâ¦ showed higher pass-\nthrough rates for candidates [we reached out to] at each stage of the\ninterview process vs. applicants via the careers page. Itâs not that we want\nto ignore applicants; itâs just that historically we donât get what weâre\nlooking for â and with speed â through that channel. Having been a recruiter\nmyself, I can confirm that many companies do indeed ignore their online\ncareers page. Many years ago, when I first joined the recruiting team at a\ntop-tier startup, I spent my first few days going through the resumes of\npeople who had applied online. I found a treasure trove of candidates,\nincluding very experienced applicants from top-tier companies.4 But no one had\nseen these applicants because no one had been monitoring inbound activity for\nmonths! The silver lining here is that when you donât hear back from a company\n(or even when you get an automatic rejection email wishing you \"the best in\nyour future endeavors\"), itâs not because a human looked at your resume and\nmade a deliberate, thoughtful decision about you. Itâs tempting to think that\nway because it plays so well into our insecurities. The reality is that a\nhuman probably never saw your resume in the first place. So why do people\napply online, despite knowing in their gut that itâs not an effective\nstrategy? Simply put, itâs predictable and easy. You get into a routine, you\nupload your resume, you connect your LinkedIn, and you can knock out hundreds\nof applications in a matter of hours. The other encouraging thing about this\nchannel is that, when we analyzed specifically which types of candidates had\nsuccess with it, we couldnât find any patterns â the channel worked equally\nwell (poorly?) for people who looked good on paper vs. not, and there was no\npreferential treatment for traditionally underrepresented groups in tech\n(e.g., women and people of color). TL;DR Applying online doesnât hurtâ¦\nprovided that you donât take rejection personally. If you do, itâll wear you\ndown over time. Warm referrals Warm referrals are, of course, excellent. That\nis, assuming it's a real referral â someone who can actually vouch for you,\nand ideally your work. Per capita, referrals are most companiesâ best source\nof candidates, and they were a great channel for our users across all company\ntypes (they were the best channel for FAANGs/FAANG-adjacents, as well as large\nstartups, and second best for small startups, behind in-house recruiters\nreaching out). If you have the network, you should absolutely use it. Of\ncourse, itâs unlikely that youâll have meaningful connections at every company\nyou want to work at. What do you do then? Cold referrals Should you ask people\nyou don't know to refer you? Our survey data says probably not. Cold referrals\nwere net negative for both FAANG and small startups and neutral for large\nstartups. Years ago, trying to collect cold referrals was a decent strategy.\nYou could track down someone at the company and ask them to toss your\nproverbial hat into the ring Engineers were often happy to refer someone â\neven someone they didn't know â either to be kind, to avoid the awkwardness of\ndeclining, or to collect the potential referral bonus. They couldn't vouch for\nyou, but the referral would ensure that a human looked at your resume. This\nbecame so common that Blind actually spun out an entire referral marketplace\ncalled Rooftop Slushie (the link is to some press because the actual site is\nnow defunct), where applicants would pay a small sum for a referral. Then,\ncompanies wised up and realized that these referrals weren't all that\ndifferent from normal in-bound applicants. So why treat them differently? Many\ncompanies nowadays separate referrals into \"true referrals\" and \"leads.\" Itâs\ngreat for maintaining the delicate dance of social dynamics, but itâs\ncompletely useless for getting hired â dropping someoneâs resume into the\nâleadsâ pile is basically the same as throwing it into the inbound black hole.\nGiven that cold referrals arenât zero effort, our advice is to expend that\nenergy elsewhere. More on that shortly. Agency recruiters Agency recruiters\nwere the worst channel overall, according to our survey, and were net negative\nfor all company types. FAANGs and FAANG-adjacent companies tend to rely less\non agencies than startups, and when they do, itâs to fill some very specific\nneed (rather than âHey we need more SWEsâ), so itâs not surprising that our\nusers didnât get much value from this channel when applying to FAANGs. While\nboth large and small startups use agencies liberally, clearly the value to\ncandidates is limited.5 Out of all of our survey respondents, only a handful\nof our users said that agencies were useful to them, and of those who\nmentioned agencies, the majority said that they were the worst channel. We\nwonât belabor the point, but itâs probably not in your best interest to spend\nmuch time on working with agency recruiters. It has opportunity cost and not\nmuch upside. And you can routinely get screwed in salary negotiations when you\nwork with an agency recruiter, if you even get that far. Cold outreach (to\nhiring managers vs. recruiters) Not all cold outreach is created equal, for\ntwo reasons. First, thereâs your audience: hiring managers vs. recruiters. And\nthen thereâs the quality of the outreach itself. Weâll come back to how to\nwrite the kinds of messages that will get you responses. First, letâs talk\nabout the audience. You can see in our survey results that cold outreach to\nhiring managers was net positive for FAANG/FAANG-adjacent companies and\nneutral for the other company types. Cold outreach to recruiters, on the other\nhand, was net negative for both FAANG/FAANG-adjacents and small startups and\nneutral for large startups. Ignoring the quality of the outreach for a moment,\nwhich we expect is probably comparable for both types, why does this\ndifference exist? If you had to answer the question of whoâs the right person\nto reach out to about jobs, your gut instinct might be to say itâs recruiters.\nAfter all, hiring is officially their job! However, thatâs not strictly true.\nRecruiters are not incentivized to make hires, at least not directly. Just\nlike everyone else, recruitersâ main priority is to keep their jobs. Cold\noutreach to recruiters doesnât work How does a recruiter keep their job?6 By\nbringing in the types of candidates that their manager tasked them with. How\nis that different from hiring? Hiring implies that youâre evaluated on whether\nthe people you bring in actually get hired, but most in-house recruiters\narenât evaluated this wayâ¦ because it takes too long. Instead, recruiters are\nsometimes evaluated on what portion of their candidates get offers or get to\nonsite. However, because of drop-off and latency (getting an offer can still\ntake months), your organization has to be pretty good at tracking. Many are\nnot. As such, many recruiting orgs prefer simpler, faster metrics: Of the\ncandidates you reached out to, how many responded? Of those who responded, how\nmany resulted in a first conversation? The downside of measuring success in a\nsingle part of the funnel is that you donât incentivize people to care about\nwhat happens downstream (that is, how many are hired). This would be like if\nmarketers only paid attention to ad clicks, rather than actual purchases. But\nthatâs how recruiting operates: individuals arenât really incentivized to care\nwhat happens downstream. So, if you are typically just measuring the response\nrates of your reports, as a recruiting manager, you have to set some\nguardrails for the types of candidates that you want your team to reach out\nto. If you donât, theyâll end up just reaching out to people who are likely to\nrespond instead of people who are a good fit for the job. Unfortunately, you\ndonât know who is a good fit for the job. You canât just say, âGo on LinkedIn,\nand find me good engineers.â That doesnât exist. So instead, you come up with\nsome rules that look like this: Senior engineers Juniors and intermediate\nengineers would answer outreach a lot, but they already apply online in\ndroves, so we donât need to pay people to go out and find them. Moreover, we\nhave a whole university department that deals with college hires once a year\nin September. Went to a top school (in the absence of a better filter, this\nworks OK) Worked at a top company There may be a few other items on the list\nif the role requires specific skills (e.g., Android development), but by and\nlarge, thatâs what recruiters are tasked with, and thatâs what theyâre focused\non. It seems counterintuitive, but if youâre either fairly junior (fewer than\n4 years of experience) or you donât have fancy brands and schools on your\nresume, recruiters are not incentivized to help you because you donât meet\ntheir criteria, and theyâre not incentivized to take risks on candidates\nbecause theyâre not getting rewarded when the company makes hires (or punished\nwhen the company doesnât). What does this mean for you? If youâre not the type\nof candidate that recruiters are reaching out to already (senior, well-\npedigreed), they will not help you. With that sad reality in mind, hereâs the\ngood news: there is someone whoâs actually incentivized to make hires and is\nmuch more open-minded: the hiring manager7! Cold outreach to hiring managers\nis effective At this point, you might be skeptical. After all, according to\nthe graph comparing all channels, hiring manager outreach is the worst of the\nbest. Sure, itâs net positive for FAANG/FAANG-adjacent companies, but it lags\nbehind in-house recruiters, warm referrals, and online applications with\nrespect to effectiveness. Hereâs the thing. Hiring manager outreach is the\nchannel with the most untapped potential for effectiveness, while also being\nthe one where you have the most control. Because companies often ignore them,\nonline applications canât come close to the same level of control, and warm\nreferrals have a low ceiling. In-house recruiter outreach is largely out of\nyour control (except for maybe making some limited profile tweaks, as we saw\nabove). Why is this the right channel? Unlike recruiters, hiring managers are\nactually incentivized to make hires and tend to be more open-minded about\ncandidate backgrounds, all because hiring managers are judged on results.\nSpecifically, theyâre judged on how quickly and effectively theyâre able to\nbuild stuff, and are â directly or indirectly â incentivized to grow\nheadcount. For hiring managers, itâs not about the appearance of doing the\nwork. Itâs about the cold, hard reality of whether the work got done. And\nbecause theyâre judged on actually getting stuff done, hiring managers are\nalso much more incentivized than recruiters to take risks. Outside of needing\nmore people to build things, hiring managers are also incentivized to hire for\ntheir teams because the better they are at recruiting and filling headcount,\nthe more likely they are to get promoted. As such, in our minds, when people\nsay that hiring manager outreach hasnât worked for them, itâs because theyâre\nnot doing it right. So, how do you do it? In our next post, weâll get very\npractical about outreach, provide a bunch of examples of good and bad\noutreach, and share two templates that you can steal. Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/how-to-get-in-the-door-at-top-companies-part-1",
      "author": "",
      "user_id": ""
    },
    {
      "title": "It's OK to postpone your interviews if you're not ready",
      "content": "thousands of engineers go through job searches, and the biggest mistakes we\nsee people make are all variations on the same theme: not postponing their\ninterview when they arenât ready. Iâve found myself repeating that itâs OK to\npostpone interviews so often that I finally broke down and decided to make it\na blog post. Itâs very simple advice, so the bulk of this post will be spent\ntrying to convince you that itâs fine to postpone. And then of course Iâll\ntell you what to say. Do any of these situations sound familiar? A recruiter\nfrom a FAANG (or other top-tier) company contacts you out of the blue and\ninvites you to interview. You do the recruiter call, and it goes well. The\nrecruiter reaches out to schedule your technical phone screen. You havenât\npracticed enough, and you know it, but you are scared to tell the recruiter\nthat you want to postpone the interview by a few months (months?!) because the\nposition may no longer be there. So, you plow ahead, do the phone screen, fail\nit, and then youâre frozen out for a year. You were able to postpone your\ntechnical phone screen and take the time to study up on data structures &\nalgorithms problems. You do well in the interview. But then your recruiter\nschedules your onsite the following week. Because you were so focused on DS&A;\nprep, you havenât had much time to study up on system design. You fumble the\nsystem design interview during the onsite, and you either get rejected or get\ndown-leveled. Both of these situations are extremely common, but theyâre both\npreventable. You can just ask to postpone. There are a few edge cases where\nthatâs not a good idea, but in most situations, itâs the right thing to do.\nWhen postponing is OK, and when you shouldnât take our advice If youâre\napplying to a large company with a centralized process (in other words, a\nprocess where you interview first and get matched with a team later),\npostponing is almost always OK. These companies are perpetually hiring, and\ntheir open roles are evergreen.1 Even if youâre applying to a large company\nwith a decentralized process (where you interview for a specific team), we\nrecommend postponing unless youâre extremely excited about the team youâre\ntalking to. In that scenario, itâs possible that if you postpone, the slot\nwill be filled. But if itâs not a perfect fit and youâd be OK with another\nteam, we recommend postponing â in the worst case, youâll simply get slotted\ninto a different team. The only time when postponing isnât a good idea is when\nyouâre applying to a very small company that has just one open headcount. In\nthat scenario, it is possible that postponing will cost you the opportunity\nbecause theyâll choose another candidate. However, you can ask how likely that\nis to happen, up front. With that edge case out of the way, hereâs a little-\nknown fact about how timing works at large companies: Recruiters donât really\ncare when you interview. Though theyâd prefer that you interview sooner rather\nthan later so they can hit their numbers, at the end of the day, theyâd rather\nbe responsible for successful candidates than unsuccessful ones. Every\nrecruiter, in every job search, will tell you that time is of the essence\nbecause of all the other candidates in the pipeline. Most of the time, that is\nirrelevant and just something they say to create an artificial sense of\nurgency. There are always other candidates in the pipeline because the roles\nare evergreen. But they have nothing to do with your prospects. Exactly what\nto say to postpone your interviews You can use this text verbatim when\npostponing your interviews, and, with some small edits, you can even use it\nseveral times (e.g., before the phone screen and then again before the\nonsite). Iâm really excited about interviewing at [company name].\nUnfortunately, if Iâm honest, I havenât had a chance to practice as much as\nIâd like. I know how hard and competitive these interviews are, and I want to\nput my best foot forward. I think Iâll realistically need a couple of months\nto prepare. How about we schedule my interview for [date]? One important thing\nto remember is to be conservative about how long it will take. Youâve probably\nheard the adage about how, when you have to estimate the time an engineering\ntask will take, you should think of a number and double it. Here, you may even\nwant to triple it. Iâve seen many candidates ask for 2 weeks because that\nfeels like a reasonable thing to ask for, only to have it blow up in their\nface when they realize they need to ask for another extension (which is still\nworth doing but harder because the company may think youâre taking them for a\nride). If you need two months, ask for two months. Postponing can also be a\ngood way to control the timing of your job search This section is extra\ncredit, but once you get comfortable with postponing your interviews when\nyouâre not prepared, you can use the same skills to batch your interviews and\nultimately control the timing of your job search. What does it mean to control\nthe timing of your job search? Ideally, you want all of your offers to come in\nat the same time, both because it maximizes optionality (one company that\narbitrarily offers first doesnât rush you into making a decision) and\nmaximizes leverage (you can negotiate from a position of power). If you want\nto dive deeper into this process, take a look at a book I recently co-wrote,\nBeyond Cracking the Coding Interview. It includes a full chapter about how to\nmanage your job search, which covers everything from determining the order in\nwhich to approach companies to how to speed them up and slow them down once\nyouâre in process. Thereâs a lot more detail than I can touch in this post,\nand much of it depends on your specific circumstances, but you can probably\nget 50% of the way there just by postponing your interviews in batches. The\nbig insight here is that, except for the edge cases we discussed above, a\nrecruiting process can be paused at any point. In other words, you can do a\nbunch of outreach to companies, then do a bunch of enthusiastic recruiter\ncalls, and THEN pause all the processes until youâre prepared to do technical\nphone screens. Then, you batch the phone screens. Finally, if needed, you\npause again to give yourself time to prepare for onsites. Onsite interviews\nrequire a different skill set than technical phone screens. The technical\nphone screen isnât about depth or fit â itâs just a way to cut people who\narenât likely to pass the onsite. The onsite, on the other hand, isnât just\nmeant to cut poor performers. Itâs at once a deeper dive into your technical\nability and a way to gauge fit. If youâll be interviewing with your future\nteam (typical at companies with a decentralized process), itâs also meant to\nassess your ability to work together, collaborate on hard things, complement\nthe team's existing skillset, and so on. It usually has some coding (to verify\nthat your technical phone screen wasnât a fluke), but the focus is usually on\nsystem design and behavioral interviews2, which are also the interviews\ncommonly used for leveling decisions. So, onsite prep is much more about\nsystem design and getting your stories right for your behavioral interviews.\nSome people can pull off prepping for both coding and sys design/behavioral at\nthe same time. For many, depending on their existing familiarity with the\nmaterial, itâs a tall order. So, itâs wise to take the time you need and\nprepare. Then, once youâre ready, you batch the onsites. When your offers come\nin, you should ask for extensions as needed, speed companies up, and start\nnegotiating (which weâve written about in the past and which, of course, is\ncovered at great depth in the book). Footnotes:",
      "content_type": "blog",
      "source_url": "https://interviewing.io/blog/its-ok-to-postpone-your-interviews-if-youre-not-ready",
      "author": "",
      "user_id": ""
    }
  ]
}